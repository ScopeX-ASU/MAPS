[38;21m2024-08-24 13:19:31,204 - train.py[line:79] - INFO: running command ['python3', 'train_metalens.py', 'configs/metalens/local_search/train_local_search/train.yml', '--criterion.aux_output_weight=0', '--aux_criterion.curl_loss.weight=0', '--aux_criterion.gap_loss.weight=0', '--plot.dir_name=metalens_train_local_search_0', '--optimizer.lr=0.0005', '--optimizer.name=adam', '--lr_scheduler.lr_min=5e-06', '--sharp_scheduler.init_sharp=10', '--sharp_scheduler.final_sharp=15', '--res_scheduler.init_res=20', '--res_scheduler.final_res=20', '--res_scheduler.test_res=20', '--run.gpu_id=0', '--run.n_epochs=15', '--run.random_state=59', '--run.fp16=False', '--model.name=Metalens', '--model.adjoint_mode=fdtd', '--model.mfs=0.3', '--model.build_method=periodic_ridge', '--model.max_num_ridges_single_side=50', '--model.initial_point=Si_metalens1D_for_850nm_FL60um.mat', '--model.binary_projection_threshold=20', '--model.subpx_smoothing_res=1000', '--model.if_constant_period=True', '--model.focal_constant=1', '--checkpoint.comment=put_your_comment_here', '--plot.train=True', '--plot.test=True', '--plot.valid=True', '--plot.output_video=False', '--plot.solve_cw=False', '--plot.phase_profile=True', '--plot.intensity_profile=True', '--plot.phase_intensity_profile_interval=5'][0m
[38;21m2024-08-24 13:40:43,239 - train.py[line:94] - INFO: Exp: metalens_local_search Done.[0m
[38;21m2024-08-24 22:57:54,286 - train.py[line:79] - INFO: running command ['python3', 'train_metalens.py', 'configs/metalens/local_search/train_local_search/train.yml', '--criterion.aux_output_weight=0', '--aux_criterion.curl_loss.weight=0', '--aux_criterion.gap_loss.weight=0', '--plot.dir_name=metalens_train_local_search_0', '--optimizer.lr=0.0005', '--optimizer.name=adam', '--lr_scheduler.lr_min=5e-06', '--sharp_scheduler.init_sharp=10', '--sharp_scheduler.final_sharp=15', '--res_scheduler.init_res=20', '--res_scheduler.final_res=20', '--res_scheduler.test_res=20', '--run.gpu_id=0', '--run.n_epochs=15', '--run.random_state=59', '--run.fp16=False', '--model.name=Metalens', '--model.adjoint_mode=fdtd', '--model.mfs=0.3', '--model.build_method=periodic_ridge', '--model.max_num_ridges_single_side=50', '--model.initial_point=Si_metalens1D_for_850nm_FL60um.mat', '--model.binary_projection_threshold=20', '--model.subpx_smoothing_res=1000', '--model.if_constant_period=True', '--model.focal_constant=1', '--checkpoint.comment=put_your_comment_here', '--plot.train=True', '--plot.test=True', '--plot.valid=True', '--plot.output_video=False', '--plot.solve_cw=False', '--plot.phase_profile=True', '--plot.intensity_profile=True', '--plot.phase_intensity_profile_interval=5'][0m
Process ForkPoolWorker-3:
Process ForkPoolWorker-2:
Process ForkPoolWorker-4:
Traceback (most recent call last):
  File "/home/pingchua/projects/Metasurface-Opt/scripts/robust_inverse_design/metalens/train.py", line 93, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 320, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-09-27 18:05:01,268 - train.py[line:91] - INFO: running command ['python3', 'train_metacoupler.py', 'configs/metacoupler/local_search/train_local_search/train.yml', '--criterion.aux_output_weight=0', '--aux_criterion.curl_loss.weight=0', '--aux_criterion.gap_loss.weight=0', '--aux_criterion.aspect_ratio_loss.weight=0', '--plot.dir_name=metacoupler_train_local_search_1', '--optimizer.lr=0.002', '--optimizer.name=adam', '--lr_scheduler.lr_min=2e-05', '--sharp_scheduler.init_sharp=4', '--sharp_scheduler.final_sharp=20', '--res_scheduler.init_res=100', '--res_scheduler.final_res=100', '--res_scheduler.test_res=100', '--run.gpu_id=0', '--run.n_epochs=50', '--run.random_state=59', '--run.fp16=False', '--model.name=MetaCoupler', '--model.adjoint_mode=ceviche', '--model.sim_cfg.adjoint_mode=ceviche', '--model.mfs=0.1', '--model.build_method=level_set', '--model.max_num_ridges_single_side=50', '--model.initial_point=None', '--model.binary_projection_threshold=20', '--model.subpx_smoothing_res=1000', '--model.if_constant_period=True', '--model.focal_constant=1', '--model.sim_cfg.resolution=100', '--model.sim_cfg.port_len=[2, 2]', '--model.sim_cfg.port_width=[6, 3]', '--model.sim_cfg.border_width=(0, 1)', '--model.constant_period=0.2', '--model.ridge_height_max=0.75', '--model.sub_height=1', '--model.num_layers=5', '--model.sub_height=0', '--model.aperture=6', '--checkpoint.comment=bi_layer_metalens', '--plot.train=True', '--plot.test=False', '--plot.valid=False', '--plot.output_video=False', '--plot.solve_cw=False', '--plot.phase_profile=False', '--plot.intensity_profile=False', '--plot.phase_intensity_profile_interval=5'][0m
[38;21m2024-09-27 18:13:24,485 - train.py[line:91] - INFO: running command ['python3', 'train_metacoupler.py', 'configs/metacoupler/local_search/train_local_search/train.yml', '--criterion.aux_output_weight=0', '--aux_criterion.curl_loss.weight=0', '--aux_criterion.gap_loss.weight=0', '--aux_criterion.aspect_ratio_loss.weight=0', '--plot.dir_name=metacoupler_train_local_search_2', '--optimizer.lr=0.002', '--optimizer.name=adam', '--lr_scheduler.lr_min=2e-05', '--sharp_scheduler.init_sharp=4', '--sharp_scheduler.final_sharp=20', '--res_scheduler.init_res=100', '--res_scheduler.final_res=100', '--res_scheduler.test_res=100', '--run.gpu_id=0', '--run.n_epochs=50', '--run.random_state=59', '--run.fp16=False', '--model.name=MetaCoupler', '--model.adjoint_mode=ceviche', '--model.sim_cfg.adjoint_mode=ceviche', '--model.mfs=0.1', '--model.build_method=1', '--model.max_num_ridges_single_side=50', '--model.initial_point=None', '--model.binary_projection_threshold=20', '--model.subpx_smoothing_res=1000', '--model.if_constant_period=True', '--model.focal_constant=1', '--model.sim_cfg.resolution=100', '--model.sim_cfg.port_len=[2, 2]', '--model.sim_cfg.port_width=[6, 3]', '--model.sim_cfg.border_width=(0, 1)', '--model.constant_period=0.2', '--model.ridge_height_max=5', '--model.sub_height=1', '--model.num_layers=level_set', '--model.sub_height=0', '--model.aperture=6', '--checkpoint.comment=bi_layer_metalens', '--plot.train=True', '--plot.test=False', '--plot.valid=False', '--plot.output_video=False', '--plot.solve_cw=False', '--plot.phase_profile=False', '--plot.intensity_profile=False', '--plot.phase_intensity_profile_interval=5'][0m
[38;21m2024-09-27 18:13:24,504 - train.py[line:91] - INFO: running command ['python3', 'train_metacoupler.py', 'configs/metacoupler/local_search/train_local_search/train.yml', '--criterion.aux_output_weight=0', '--aux_criterion.curl_loss.weight=0', '--aux_criterion.gap_loss.weight=0', '--aux_criterion.aspect_ratio_loss.weight=0', '--plot.dir_name=metacoupler_train_local_search_3', '--optimizer.lr=0.002', '--optimizer.name=adam', '--lr_scheduler.lr_min=2e-05', '--sharp_scheduler.init_sharp=4', '--sharp_scheduler.final_sharp=20', '--res_scheduler.init_res=100', '--res_scheduler.final_res=100', '--res_scheduler.test_res=100', '--run.gpu_id=1', '--run.n_epochs=50', '--run.random_state=59', '--run.fp16=False', '--model.name=MetaCoupler', '--model.adjoint_mode=ceviche', '--model.sim_cfg.adjoint_mode=ceviche', '--model.mfs=0.1', '--model.build_method=0.5', '--model.max_num_ridges_single_side=50', '--model.initial_point=None', '--model.binary_projection_threshold=20', '--model.subpx_smoothing_res=1000', '--model.if_constant_period=True', '--model.focal_constant=1', '--model.sim_cfg.resolution=100', '--model.sim_cfg.port_len=[2, 2]', '--model.sim_cfg.port_width=[6, 3]', '--model.sim_cfg.border_width=(0, 1)', '--model.constant_period=0.2', '--model.ridge_height_max=10', '--model.sub_height=1', '--model.num_layers=level_set', '--model.sub_height=0', '--model.aperture=6', '--checkpoint.comment=bi_layer_metalens', '--plot.train=True', '--plot.test=False', '--plot.valid=False', '--plot.output_video=False', '--plot.solve_cw=False', '--plot.phase_profile=False', '--plot.intensity_profile=False', '--plot.phase_intensity_profile_interval=5'][0m
multiprocessing.pool.RemoteTraceback: 
"""
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 48, in mapstar
    return list(map(*args))
  File "/home/pingchua/projects/Metasurface-Opt/scripts/robust_inverse_design/metalens/train.py", line 21, in task_launcher
    model_name, constant_period, mfs, num_layers, ridge_height_max, build_method, max_num_ridges_single_side, init_point, binary_proj_threshold, focal_const, adjoint_mode, aux_loss, opt_name, gpu_id, lr, init_sharp, final_sharp, res, test_res, epochs, id, comment = args
ValueError: not enough values to unpack (expected 22, got 21)
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pingchua/projects/Metasurface-Opt/scripts/robust_inverse_design/metalens/train.py", line 111, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 774, in get
    raise self._value
ValueError: not enough values to unpack (expected 22, got 21)
[38;21m2024-09-27 18:13:52,000 - train.py[line:91] - INFO: running command ['python3', 'train_metacoupler.py', 'configs/metacoupler/local_search/train_local_search/train.yml', '--criterion.aux_output_weight=0', '--aux_criterion.curl_loss.weight=0', '--aux_criterion.gap_loss.weight=0', '--aux_criterion.aspect_ratio_loss.weight=0', '--plot.dir_name=metacoupler_train_local_search_2', '--optimizer.lr=0.002', '--optimizer.name=adam', '--lr_scheduler.lr_min=2e-05', '--sharp_scheduler.init_sharp=4', '--sharp_scheduler.final_sharp=20', '--res_scheduler.init_res=100', '--res_scheduler.final_res=100', '--res_scheduler.test_res=100', '--run.gpu_id=0', '--run.n_epochs=50', '--run.random_state=59', '--run.fp16=False', '--model.name=MetaCoupler', '--model.adjoint_mode=ceviche', '--model.sim_cfg.adjoint_mode=ceviche', '--model.mfs=0.1', '--model.build_method=1', '--model.max_num_ridges_single_side=50', '--model.initial_point=None', '--model.binary_projection_threshold=20', '--model.subpx_smoothing_res=1000', '--model.if_constant_period=True', '--model.focal_constant=1', '--model.sim_cfg.resolution=100', '--model.sim_cfg.port_len=[2, 2]', '--model.sim_cfg.port_width=[6, 3]', '--model.sim_cfg.border_width=(0, 1)', '--model.constant_period=0.2', '--model.ridge_height_max=5', '--model.sub_height=1', '--model.num_layers=level_set', '--model.sub_height=0', '--model.aperture=6', '--checkpoint.comment=bi_layer_metalens', '--plot.train=True', '--plot.test=False', '--plot.valid=False', '--plot.output_video=False', '--plot.solve_cw=False', '--plot.phase_profile=False', '--plot.intensity_profile=False', '--plot.phase_intensity_profile_interval=5'][0m
[38;21m2024-09-27 18:13:52,011 - train.py[line:91] - INFO: running command ['python3', 'train_metacoupler.py', 'configs/metacoupler/local_search/train_local_search/train.yml', '--criterion.aux_output_weight=0', '--aux_criterion.curl_loss.weight=0', '--aux_criterion.gap_loss.weight=0', '--aux_criterion.aspect_ratio_loss.weight=0', '--plot.dir_name=metacoupler_train_local_search_3', '--optimizer.lr=0.002', '--optimizer.name=adam', '--lr_scheduler.lr_min=2e-05', '--sharp_scheduler.init_sharp=4', '--sharp_scheduler.final_sharp=20', '--res_scheduler.init_res=100', '--res_scheduler.final_res=100', '--res_scheduler.test_res=100', '--run.gpu_id=1', '--run.n_epochs=50', '--run.random_state=59', '--run.fp16=False', '--model.name=MetaCoupler', '--model.adjoint_mode=ceviche', '--model.sim_cfg.adjoint_mode=ceviche', '--model.mfs=0.1', '--model.build_method=0.5', '--model.max_num_ridges_single_side=50', '--model.initial_point=None', '--model.binary_projection_threshold=20', '--model.subpx_smoothing_res=1000', '--model.if_constant_period=True', '--model.focal_constant=1', '--model.sim_cfg.resolution=100', '--model.sim_cfg.port_len=[2, 2]', '--model.sim_cfg.port_width=[6, 3]', '--model.sim_cfg.border_width=(0, 1)', '--model.constant_period=0.2', '--model.ridge_height_max=10', '--model.sub_height=1', '--model.num_layers=level_set', '--model.sub_height=0', '--model.aperture=6', '--checkpoint.comment=bi_layer_metalens', '--plot.train=True', '--plot.test=False', '--plot.valid=False', '--plot.output_video=False', '--plot.solve_cw=False', '--plot.phase_profile=False', '--plot.intensity_profile=False', '--plot.phase_intensity_profile_interval=5'][0m
multiprocessing.pool.RemoteTraceback: 
"""
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 48, in mapstar
    return list(map(*args))
  File "/home/pingchua/projects/Metasurface-Opt/scripts/robust_inverse_design/metalens/train.py", line 21, in task_launcher
    model_name, constant_period, mfs, num_layers, ridge_height_max, build_method, max_num_ridges_single_side, init_point, binary_proj_threshold, focal_const, adjoint_mode, aux_loss, opt_name, gpu_id, lr, init_sharp, final_sharp, res, test_res, epochs, id, comment = args
ValueError: not enough values to unpack (expected 22, got 21)
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pingchua/projects/Metasurface-Opt/scripts/robust_inverse_design/metalens/train.py", line 111, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 774, in get
    raise self._value
ValueError: not enough values to unpack (expected 22, got 21)
[38;21m2024-09-27 18:15:04,405 - train.py[line:91] - INFO: running command ['python3', 'train_metacoupler.py', 'configs/metacoupler/local_search/train_local_search/train.yml', '--criterion.aux_output_weight=0', '--aux_criterion.curl_loss.weight=0', '--aux_criterion.gap_loss.weight=0', '--aux_criterion.aspect_ratio_loss.weight=0', '--plot.dir_name=metacoupler_train_local_search_2', '--optimizer.lr=0.002', '--optimizer.name=adam', '--lr_scheduler.lr_min=2e-05', '--sharp_scheduler.init_sharp=4', '--sharp_scheduler.final_sharp=20', '--res_scheduler.init_res=100', '--res_scheduler.final_res=100', '--res_scheduler.test_res=100', '--run.gpu_id=0', '--run.n_epochs=50', '--run.random_state=59', '--run.fp16=False', '--model.name=MetaCoupler', '--model.adjoint_mode=ceviche', '--model.sim_cfg.adjoint_mode=ceviche', '--model.mfs=0.1', '--model.build_method=level_set', '--model.max_num_ridges_single_side=50', '--model.initial_point=None', '--model.binary_projection_threshold=20', '--model.subpx_smoothing_res=1000', '--model.if_constant_period=True', '--model.focal_constant=1', '--model.sim_cfg.resolution=100', '--model.sim_cfg.port_len=[2, 2]', '--model.sim_cfg.port_width=[6, 3]', '--model.sim_cfg.border_width=(0, 1)', '--model.constant_period=0.2', '--model.ridge_height_max=1', '--model.sub_height=1', '--model.num_layers=5', '--model.sub_height=0', '--model.aperture=6', '--checkpoint.comment=bi_layer_metalens', '--plot.train=True', '--plot.test=False', '--plot.valid=False', '--plot.output_video=False', '--plot.solve_cw=False', '--plot.phase_profile=False', '--plot.intensity_profile=False', '--plot.phase_intensity_profile_interval=5'][0m
[38;21m2024-09-27 18:15:04,416 - train.py[line:91] - INFO: running command ['python3', 'train_metacoupler.py', 'configs/metacoupler/local_search/train_local_search/train.yml', '--criterion.aux_output_weight=0', '--aux_criterion.curl_loss.weight=0', '--aux_criterion.gap_loss.weight=0', '--aux_criterion.aspect_ratio_loss.weight=0', '--plot.dir_name=metacoupler_train_local_search_3', '--optimizer.lr=0.002', '--optimizer.name=adam', '--lr_scheduler.lr_min=2e-05', '--sharp_scheduler.init_sharp=4', '--sharp_scheduler.final_sharp=20', '--res_scheduler.init_res=100', '--res_scheduler.final_res=100', '--res_scheduler.test_res=100', '--run.gpu_id=1', '--run.n_epochs=50', '--run.random_state=59', '--run.fp16=False', '--model.name=MetaCoupler', '--model.adjoint_mode=ceviche', '--model.sim_cfg.adjoint_mode=ceviche', '--model.mfs=0.1', '--model.build_method=level_set', '--model.max_num_ridges_single_side=50', '--model.initial_point=None', '--model.binary_projection_threshold=20', '--model.subpx_smoothing_res=1000', '--model.if_constant_period=True', '--model.focal_constant=1', '--model.sim_cfg.resolution=100', '--model.sim_cfg.port_len=[2, 2]', '--model.sim_cfg.port_width=[6, 3]', '--model.sim_cfg.border_width=(0, 1)', '--model.constant_period=0.2', '--model.ridge_height_max=0.5', '--model.sub_height=1', '--model.num_layers=10', '--model.sub_height=0', '--model.aperture=6', '--checkpoint.comment=bi_layer_metalens', '--plot.train=True', '--plot.test=False', '--plot.valid=False', '--plot.output_video=False', '--plot.solve_cw=False', '--plot.phase_profile=False', '--plot.intensity_profile=False', '--plot.phase_intensity_profile_interval=5'][0m
[38;21m2024-09-27 18:37:12,237 - train.py[line:108] - INFO: Exp: metalens_local_search Done.[0m
multiprocessing.pool.RemoteTraceback: 
"""
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 48, in mapstar
    return list(map(*args))
  File "/home/pingchua/projects/Metasurface-Opt/scripts/robust_inverse_design/metalens/train.py", line 21, in task_launcher
    model_name, constant_period, mfs, num_layers, ridge_height_max, build_method, max_num_ridges_single_side, init_point, binary_proj_threshold, focal_const, adjoint_mode, aux_loss, opt_name, gpu_id, lr, init_sharp, final_sharp, res, test_res, epochs, id, comment = args
ValueError: not enough values to unpack (expected 22, got 21)
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pingchua/projects/Metasurface-Opt/scripts/robust_inverse_design/metalens/train.py", line 111, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 774, in get
    raise self._value
ValueError: not enough values to unpack (expected 22, got 21)
multiprocessing.pool.RemoteTraceback: 
"""
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 48, in mapstar
    return list(map(*args))
  File "/home/pingchua/projects/Metasurface-Opt/scripts/robust_inverse_design/metalens/train.py", line 21, in task_launcher
    model_name, aperture, sub_height, constant_period, mfs, num_layers, ridge_height_max, build_method, max_num_ridges_single_side, init_point, binary_proj_threshold, focal_const, adjoint_mode, aux_loss, opt_name, gpu_id, lr, init_sharp, final_sharp, res, test_res, epochs, id, comment = args
ValueError: not enough values to unpack (expected 24, got 23)
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pingchua/projects/Metasurface-Opt/scripts/robust_inverse_design/metalens/train.py", line 110, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 774, in get
    raise self._value
ValueError: not enough values to unpack (expected 24, got 23)
[38;21m2024-09-27 18:56:49,257 - train.py[line:90] - INFO: running command ['python3', 'train_metacoupler.py', 'configs/metacoupler/local_search/train_local_search/train.yml', '--criterion.aux_output_weight=0', '--aux_criterion.curl_loss.weight=0', '--aux_criterion.gap_loss.weight=0', '--aux_criterion.aspect_ratio_loss.weight=0', '--plot.dir_name=metacoupler_train_local_search_4', '--optimizer.lr=0.002', '--optimizer.name=adam', '--lr_scheduler.lr_min=2e-05', '--sharp_scheduler.init_sharp=4', '--sharp_scheduler.final_sharp=20', '--res_scheduler.init_res=100', '--res_scheduler.final_res=100', '--res_scheduler.test_res=100', '--run.gpu_id=2', '--run.n_epochs=50', '--run.random_state=59', '--run.fp16=False', '--model.name=MetaCoupler', '--model.adjoint_mode=ceviche', '--model.sim_cfg.adjoint_mode=ceviche', '--model.mfs=0.1', '--model.build_method=level_set', '--model.max_num_ridges_single_side=50', '--model.initial_point=None', '--model.binary_projection_threshold=20', '--model.subpx_smoothing_res=1000', '--model.if_constant_period=True', '--model.focal_constant=1', '--model.sim_cfg.resolution=100', '--model.sim_cfg.port_len=[2, 2]', '--model.sim_cfg.port_width=[6, 3]', '--model.sim_cfg.border_width=(0, 1)', '--model.constant_period=0.2', '--model.ridge_height_max=2', '--model.num_layers=2', '--model.sub_height=0', '--model.aperture=6', '--checkpoint.comment=bi_layer_metalens', '--plot.train=True', '--plot.test=False', '--plot.valid=False', '--plot.output_video=False', '--plot.solve_cw=False', '--plot.phase_profile=False', '--plot.intensity_profile=False', '--plot.phase_intensity_profile_interval=5'][0m
[38;21m2024-09-27 18:56:49,260 - train.py[line:90] - INFO: running command ['python3', 'train_metacoupler.py', 'configs/metacoupler/local_search/train_local_search/train.yml', '--criterion.aux_output_weight=0', '--aux_criterion.curl_loss.weight=0', '--aux_criterion.gap_loss.weight=0', '--aux_criterion.aspect_ratio_loss.weight=0', '--plot.dir_name=metacoupler_train_local_search_5', '--optimizer.lr=0.002', '--optimizer.name=adam', '--lr_scheduler.lr_min=2e-05', '--sharp_scheduler.init_sharp=4', '--sharp_scheduler.final_sharp=20', '--res_scheduler.init_res=100', '--res_scheduler.final_res=100', '--res_scheduler.test_res=100', '--run.gpu_id=3', '--run.n_epochs=50', '--run.random_state=59', '--run.fp16=False', '--model.name=MetaCoupler', '--model.adjoint_mode=ceviche', '--model.sim_cfg.adjoint_mode=ceviche', '--model.mfs=0.1', '--model.build_method=level_set', '--model.max_num_ridges_single_side=50', '--model.initial_point=None', '--model.binary_projection_threshold=20', '--model.subpx_smoothing_res=1000', '--model.if_constant_period=True', '--model.focal_constant=1', '--model.sim_cfg.resolution=100', '--model.sim_cfg.port_len=[2, 2]', '--model.sim_cfg.port_width=[6, 3]', '--model.sim_cfg.border_width=(0, 1)', '--model.constant_period=0.2', '--model.ridge_height_max=0.4', '--model.num_layers=15', '--model.sub_height=0', '--model.aperture=6', '--checkpoint.comment=bi_layer_metalens', '--plot.train=True', '--plot.test=False', '--plot.valid=False', '--plot.output_video=False', '--plot.solve_cw=False', '--plot.phase_profile=False', '--plot.intensity_profile=False', '--plot.phase_intensity_profile_interval=5'][0m
[38;21m2024-09-27 19:32:02,833 - train.py[line:111] - INFO: Exp: metalens_local_search Done.[0m
[38;21m2024-09-28 00:17:17,286 - train.py[line:90] - INFO: running command ['python3', 'train_metacoupler.py', 'configs/metacoupler/local_search/train_local_search/train.yml', '--criterion.aux_output_weight=0', '--aux_criterion.curl_loss.weight=0', '--aux_criterion.gap_loss.weight=0', '--aux_criterion.aspect_ratio_loss.weight=0', '--plot.dir_name=metacoupler_train_local_search_6', '--optimizer.lr=0.002', '--optimizer.name=adam', '--lr_scheduler.lr_min=2e-05', '--sharp_scheduler.init_sharp=4', '--sharp_scheduler.final_sharp=20', '--res_scheduler.init_res=100', '--res_scheduler.final_res=100', '--res_scheduler.test_res=100', '--run.gpu_id=0', '--run.n_epochs=50', '--run.random_state=59', '--run.fp16=False', '--model.name=MetaCoupler', '--model.adjoint_mode=ceviche', '--model.sim_cfg.adjoint_mode=ceviche', '--model.mfs=0.1', '--model.build_method=level_set', '--model.max_num_ridges_single_side=50', '--model.initial_point=None', '--model.binary_projection_threshold=20', '--model.subpx_smoothing_res=1000', '--model.if_constant_period=True', '--model.focal_constant=1', '--model.sim_cfg.resolution=100', '--model.sim_cfg.port_len=[2, 2]', '--model.sim_cfg.port_width=[6, 3]', '--model.sim_cfg.border_width=(0, 1)', '--model.constant_period=0.2', '--model.ridge_height_max=0.4', '--model.num_layers=15', '--model.sub_height=0', '--model.aperture=6', '--checkpoint.comment=debug', '--plot.train=True', '--plot.test=False', '--plot.valid=False', '--plot.output_video=False', '--plot.solve_cw=False', '--plot.phase_profile=False', '--plot.intensity_profile=False', '--plot.phase_intensity_profile_interval=5'][0m
[38;21m2024-09-28 00:17:41,119 - train.py[line:112] - INFO: Exp: metalens_local_search Done.[0m
[38;21m2024-09-28 00:18:17,669 - train.py[line:90] - INFO: running command ['python3', 'train_metacoupler.py', 'configs/metacoupler/local_search/train_local_search/train.yml', '--criterion.aux_output_weight=0', '--aux_criterion.curl_loss.weight=0', '--aux_criterion.gap_loss.weight=0', '--aux_criterion.aspect_ratio_loss.weight=0', '--plot.dir_name=metacoupler_train_local_search_6', '--optimizer.lr=0.002', '--optimizer.name=adam', '--lr_scheduler.lr_min=2e-05', '--sharp_scheduler.init_sharp=4', '--sharp_scheduler.final_sharp=20', '--res_scheduler.init_res=100', '--res_scheduler.final_res=100', '--res_scheduler.test_res=100', '--run.gpu_id=0', '--run.n_epochs=50', '--run.random_state=59', '--run.fp16=False', '--model.name=MetaCoupler', '--model.adjoint_mode=ceviche', '--model.sim_cfg.adjoint_mode=ceviche', '--model.mfs=0.1', '--model.build_method=level_set', '--model.max_num_ridges_single_side=50', '--model.initial_point=None', '--model.binary_projection_threshold=20', '--model.subpx_smoothing_res=1000', '--model.if_constant_period=True', '--model.focal_constant=1', '--model.sim_cfg.resolution=100', '--model.sim_cfg.port_len=[2, 2]', '--model.sim_cfg.port_width=[6, 3]', '--model.sim_cfg.border_width=(0, 1)', '--model.constant_period=0.2', '--model.ridge_height_max=0.4', '--model.num_layers=15', '--model.sub_height=0', '--model.aperture=6', '--checkpoint.comment=debug', '--plot.train=True', '--plot.test=False', '--plot.valid=False', '--plot.output_video=False', '--plot.solve_cw=False', '--plot.phase_profile=False', '--plot.intensity_profile=False', '--plot.phase_intensity_profile_interval=5'][0m
Process ForkPoolWorker-2:
Process ForkPoolWorker-4:
Process ForkPoolWorker-3:
Traceback (most recent call last):
  File "/home/pingchua/projects/Metasurface-Opt/scripts/robust_inverse_design/metalens/train.py", line 111, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 320, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-09-28 00:34:01,723 - train.py[line:90] - INFO: running command ['python3', 'train_metacoupler.py', 'configs/metacoupler/local_search/train_local_search/train.yml', '--criterion.aux_output_weight=0', '--aux_criterion.curl_loss.weight=0', '--aux_criterion.gap_loss.weight=0', '--aux_criterion.aspect_ratio_loss.weight=0', '--plot.dir_name=metacoupler_train_local_search_6', '--optimizer.lr=0.002', '--optimizer.name=adam', '--lr_scheduler.lr_min=2e-05', '--sharp_scheduler.init_sharp=4', '--sharp_scheduler.final_sharp=20', '--res_scheduler.init_res=100', '--res_scheduler.final_res=100', '--res_scheduler.test_res=100', '--run.gpu_id=0', '--run.n_epochs=50', '--run.random_state=59', '--run.fp16=False', '--model.name=MetaCoupler', '--model.adjoint_mode=ceviche', '--model.sim_cfg.adjoint_mode=ceviche', '--model.mfs=0.1', '--model.build_method=level_set', '--model.max_num_ridges_single_side=50', '--model.initial_point=None', '--model.binary_projection_threshold=20', '--model.subpx_smoothing_res=1000', '--model.if_constant_period=True', '--model.focal_constant=1', '--model.sim_cfg.resolution=100', '--model.sim_cfg.port_len=[2, 2]', '--model.sim_cfg.port_width=[6, 3]', '--model.sim_cfg.border_width=(0, 1)', '--model.constant_period=0.2', '--model.ridge_height_max=0.4', '--model.num_layers=15', '--model.sub_height=0', '--model.aperture=6', '--checkpoint.comment=debug', '--plot.train=True', '--plot.test=False', '--plot.valid=False', '--plot.output_video=False', '--plot.solve_cw=False', '--plot.phase_profile=False', '--plot.intensity_profile=False', '--plot.phase_intensity_profile_interval=5'][0m
[38;21m2024-09-28 00:34:45,543 - train.py[line:112] - INFO: Exp: metalens_local_search Done.[0m
[38;21m2024-09-28 00:37:53,677 - train.py[line:90] - INFO: running command ['python3', 'train_metacoupler.py', 'configs/metacoupler/local_search/train_local_search/train.yml', '--criterion.aux_output_weight=0', '--aux_criterion.curl_loss.weight=0', '--aux_criterion.gap_loss.weight=0', '--aux_criterion.aspect_ratio_loss.weight=0', '--plot.dir_name=metacoupler_train_local_search_6', '--optimizer.lr=0.002', '--optimizer.name=adam', '--lr_scheduler.lr_min=2e-05', '--sharp_scheduler.init_sharp=4', '--sharp_scheduler.final_sharp=20', '--res_scheduler.init_res=100', '--res_scheduler.final_res=100', '--res_scheduler.test_res=100', '--run.gpu_id=0', '--run.n_epochs=50', '--run.random_state=59', '--run.fp16=False', '--model.name=MetaCoupler', '--model.adjoint_mode=ceviche', '--model.sim_cfg.adjoint_mode=ceviche', '--model.mfs=0.1', '--model.build_method=level_set', '--model.max_num_ridges_single_side=50', '--model.initial_point=None', '--model.binary_projection_threshold=20', '--model.subpx_smoothing_res=1000', '--model.if_constant_period=True', '--model.focal_constant=1', '--model.sim_cfg.resolution=100', '--model.sim_cfg.port_len=[2, 2]', '--model.sim_cfg.port_width=[6, 3]', '--model.sim_cfg.border_width=(0, 1)', '--model.constant_period=0.2', '--model.ridge_height_max=0.4', '--model.num_layers=15', '--model.sub_height=0', '--model.aperture=6', '--checkpoint.comment=debug', '--plot.train=True', '--plot.test=False', '--plot.valid=False', '--plot.output_video=False', '--plot.solve_cw=False', '--plot.phase_profile=False', '--plot.intensity_profile=False', '--plot.phase_intensity_profile_interval=5'][0m
Process ForkPoolWorker-2:
Process ForkPoolWorker-3:
Process ForkPoolWorker-4:
Traceback (most recent call last):
  File "/home/pingchua/projects/Metasurface-Opt/scripts/robust_inverse_design/metalens/train.py", line 111, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 320, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-09-28 00:47:04,981 - train.py[line:90] - INFO: running command ['python3', 'train_metacoupler.py', 'configs/metacoupler/local_search/train_local_search/train.yml', '--criterion.aux_output_weight=0', '--aux_criterion.curl_loss.weight=0', '--aux_criterion.gap_loss.weight=0', '--aux_criterion.aspect_ratio_loss.weight=0', '--plot.dir_name=metacoupler_train_local_search_6', '--optimizer.lr=0.002', '--optimizer.name=adam', '--lr_scheduler.lr_min=2e-05', '--sharp_scheduler.init_sharp=4', '--sharp_scheduler.final_sharp=20', '--res_scheduler.init_res=100', '--res_scheduler.final_res=100', '--res_scheduler.test_res=100', '--run.gpu_id=0', '--run.n_epochs=50', '--run.random_state=59', '--run.fp16=False', '--model.name=MetaCoupler', '--model.adjoint_mode=ceviche', '--model.sim_cfg.adjoint_mode=ceviche', '--model.mfs=0.1', '--model.build_method=level_set', '--model.max_num_ridges_single_side=50', '--model.initial_point=None', '--model.binary_projection_threshold=20', '--model.subpx_smoothing_res=1000', '--model.if_constant_period=True', '--model.focal_constant=1', '--model.sim_cfg.resolution=100', '--model.sim_cfg.port_len=[2, 2]', '--model.sim_cfg.port_width=[6, 3]', '--model.sim_cfg.border_width=(0, 1)', '--model.constant_period=0.2', '--model.ridge_height_max=0.4', '--model.num_layers=15', '--model.sub_height=0', '--model.aperture=6', '--checkpoint.comment=debug', '--plot.train=True', '--plot.test=False', '--plot.valid=False', '--plot.output_video=False', '--plot.solve_cw=False', '--plot.phase_profile=False', '--plot.intensity_profile=False', '--plot.phase_intensity_profile_interval=5'][0m
[38;21m2024-09-28 00:47:58,798 - train.py[line:112] - INFO: Exp: metalens_local_search Done.[0m
[38;21m2024-09-28 00:50:09,530 - train.py[line:90] - INFO: running command ['python3', 'train_metacoupler.py', 'configs/metacoupler/local_search/train_local_search/train.yml', '--criterion.aux_output_weight=0', '--aux_criterion.curl_loss.weight=0', '--aux_criterion.gap_loss.weight=0', '--aux_criterion.aspect_ratio_loss.weight=0', '--plot.dir_name=metacoupler_train_local_search_6', '--optimizer.lr=0.002', '--optimizer.name=adam', '--lr_scheduler.lr_min=2e-05', '--sharp_scheduler.init_sharp=4', '--sharp_scheduler.final_sharp=20', '--res_scheduler.init_res=100', '--res_scheduler.final_res=100', '--res_scheduler.test_res=100', '--run.gpu_id=0', '--run.n_epochs=50', '--run.random_state=59', '--run.fp16=False', '--model.name=MetaCoupler', '--model.adjoint_mode=ceviche', '--model.sim_cfg.adjoint_mode=ceviche', '--model.mfs=0.1', '--model.build_method=level_set', '--model.max_num_ridges_single_side=50', '--model.initial_point=None', '--model.binary_projection_threshold=20', '--model.subpx_smoothing_res=1000', '--model.if_constant_period=True', '--model.focal_constant=1', '--model.sim_cfg.resolution=100', '--model.sim_cfg.port_len=[2, 2]', '--model.sim_cfg.port_width=[6, 3]', '--model.sim_cfg.border_width=(0, 1)', '--model.constant_period=0.2', '--model.ridge_height_max=0.4', '--model.num_layers=15', '--model.sub_height=0', '--model.aperture=6', '--checkpoint.comment=debug', '--plot.train=True', '--plot.test=False', '--plot.valid=False', '--plot.output_video=False', '--plot.solve_cw=False', '--plot.phase_profile=False', '--plot.intensity_profile=False', '--plot.phase_intensity_profile_interval=5'][0m
[38;21m2024-09-28 00:50:45,424 - train.py[line:112] - INFO: Exp: metalens_local_search Done.[0m
[38;21m2024-09-28 22:19:01,518 - train.py[line:90] - INFO: running command ['python3', 'train_metacoupler.py', 'configs/metacoupler/local_search/train_local_search/train.yml', '--criterion.aux_output_weight=0', '--aux_criterion.curl_loss.weight=0', '--aux_criterion.gap_loss.weight=0', '--aux_criterion.aspect_ratio_loss.weight=0', '--plot.dir_name=metacoupler_train_local_search_7', '--optimizer.lr=0.002', '--optimizer.name=adam', '--lr_scheduler.lr_min=2e-05', '--sharp_scheduler.init_sharp=4', '--sharp_scheduler.final_sharp=20', '--res_scheduler.init_res=100', '--res_scheduler.final_res=100', '--res_scheduler.test_res=100', '--run.gpu_id=3', '--run.n_epochs=50', '--run.random_state=59', '--run.fp16=False', '--model.name=MetaCoupler', '--model.adjoint_mode=ceviche', '--model.sim_cfg.adjoint_mode=ceviche', '--model.mfs=0.1', '--model.build_method=level_set', '--model.max_num_ridges_single_side=50', '--model.initial_point=None', '--model.binary_projection_threshold=20', '--model.subpx_smoothing_res=1000', '--model.if_constant_period=True', '--model.focal_constant=1', '--model.sim_cfg.resolution=100', '--model.sim_cfg.port_len=[2, 2]', '--model.sim_cfg.port_width=[6, 3]', '--model.sim_cfg.border_width=(0, 0.5)', '--model.constant_period=0.2', '--model.ridge_height_max=0.4', '--model.num_layers=30', '--model.sub_height=0', '--model.aperture=6', '--checkpoint.comment=bi_layer_metalens', '--plot.train=True', '--plot.test=False', '--plot.valid=False', '--plot.output_video=False', '--plot.solve_cw=False', '--plot.phase_profile=False', '--plot.intensity_profile=False', '--plot.phase_intensity_profile_interval=5'][0m
[38;21m2024-09-28 22:43:45,260 - train.py[line:113] - INFO: Exp: metalens_local_search Done.[0m
[38;21m2024-10-14 17:49:34,162 - base_optimization.py[line:173] - INFO: Start building design region parametrizations ...[0m
[38;21m2024-10-14 17:49:34,165 - metacoupler.py[line:88] - INFO: Start generating sources and monitors ...[0m
[38;21m2024-10-14 17:49:34,167 - metacoupler.py[line:119] - INFO: Start normalization run ...[0m
Using MPI version 4.1, 1 processes
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
MetaCoupler(size=(12.0, 18.0, 0), Nx=600, Ny=900)
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
MetaCouplerOptimization(
  (design_region_param_dict): ModuleDict(
    (design_region_0): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_1): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_2): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_3): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_4): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_5): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
  )
  (objective_layer): SimulatedFoM(adjoint_mode=ceviche_torch)
)
Step 0: {'fwd_trans': {'weight': 1, 'value': tensor(0.7341, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.7341, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0616, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0315, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0106, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(3.0335e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(2.8214e-07, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(4.0486e-07, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(1.0122e-06, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(9.4128e-07, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}}
Step 1: {'fwd_trans': {'weight': 1, 'value': tensor(0.5193, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.5193, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0721, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0215, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0489, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(2.7929e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(5.6572e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 2: {'fwd_trans': {'weight': 1, 'value': tensor(0.8028, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.8029, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0506, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0208, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0192, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0018, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(9.8929e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 3: {'fwd_trans': {'weight': 1, 'value': tensor(0.8020, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.8020, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0494, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0250, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0046, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0013, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0011, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 4: {'fwd_trans': {'weight': 1, 'value': tensor(0.7215, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.7215, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0742, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0255, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0178, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0003, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0016, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0013, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 5: {'fwd_trans': {'weight': 1, 'value': tensor(0.8856, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.8856, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0452, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0256, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0017, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(8.4551e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 6: {'fwd_trans': {'weight': 1, 'value': tensor(0.9061, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9061, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0420, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0269, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(2.7289e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0011, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(2.1214e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 7: {'fwd_trans': {'weight': 1, 'value': tensor(0.9101, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9102, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0373, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0273, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0104, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(7.1382e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0016, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(7.7741e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 8: {'fwd_trans': {'weight': 1, 'value': tensor(0.9481, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9481, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0340, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0263, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0044, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0010, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(6.9756e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 9: {'fwd_trans': {'weight': 1, 'value': tensor(0.9529, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9529, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0262, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 10: {'fwd_trans': {'weight': 1, 'value': tensor(0.9558, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9558, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0259, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0019, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.3316e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 11: {'fwd_trans': {'weight': 1, 'value': tensor(0.9559, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9559, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0330, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0255, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 12: {'fwd_trans': {'weight': 1, 'value': tensor(0.9554, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9554, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0323, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0250, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0033, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 13: {'fwd_trans': {'weight': 1, 'value': tensor(0.9575, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9575, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0318, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0257, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 14: {'fwd_trans': {'weight': 1, 'value': tensor(0.9592, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9592, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0316, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0259, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0016, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 15: {'fwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0310, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0255, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0010, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.6807e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 16: {'fwd_trans': {'weight': 1, 'value': tensor(0.9612, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9612, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0010, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 17: {'fwd_trans': {'weight': 1, 'value': tensor(0.9613, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9613, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 18: {'fwd_trans': {'weight': 1, 'value': tensor(0.9617, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9617, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0253, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 19: {'fwd_trans': {'weight': 1, 'value': tensor(0.9603, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9603, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0320, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0253, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 20: {'fwd_trans': {'weight': 1, 'value': tensor(0.9571, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9572, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0314, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0248, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0011, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0013, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0012, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(8.1731e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 21: {'fwd_trans': {'weight': 1, 'value': tensor(0.9586, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9587, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0315, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0256, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 22: {'fwd_trans': {'weight': 1, 'value': tensor(0.9606, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0253, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 23: {'fwd_trans': {'weight': 1, 'value': tensor(0.9594, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9594, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0331, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0258, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0013, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(6.8539e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 24: {'fwd_trans': {'weight': 1, 'value': tensor(0.9605, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9605, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0012, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(8.8339e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 25: {'fwd_trans': {'weight': 1, 'value': tensor(0.9601, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9601, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0250, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(7.3862e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(8.7160e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 26: {'fwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.1274e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7030e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 27: {'fwd_trans': {'weight': 1, 'value': tensor(0.9600, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9600, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0253, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0018, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 28: {'fwd_trans': {'weight': 1, 'value': tensor(0.9606, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9606, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0016, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 29: {'fwd_trans': {'weight': 1, 'value': tensor(0.9603, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9603, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(8.9185e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 30: {'fwd_trans': {'weight': 1, 'value': tensor(0.9604, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9604, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9609e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.6634e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 31: {'fwd_trans': {'weight': 1, 'value': tensor(0.9605, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9605, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7691e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 32: {'fwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0013, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 33: {'fwd_trans': {'weight': 1, 'value': tensor(0.9603, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9603, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0253, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 34: {'fwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0016, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 35: {'fwd_trans': {'weight': 1, 'value': tensor(0.9604, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9604, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0016, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 36: {'fwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0013, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.3299e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 37: {'fwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0013, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.2762e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 38: {'fwd_trans': {'weight': 1, 'value': tensor(0.9606, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0253, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 39: {'fwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 40: {'fwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0013, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 41: {'fwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0013, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 42: {'fwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 43: {'fwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0016, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 44: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 45: {'fwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0013, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7415e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 46: {'fwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8180e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.1394e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 47: {'fwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7217e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(8.7983e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 48: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.1832e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 49: {'fwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.2819e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 50: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.5431e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 51: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.5512e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8741e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 52: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.6128e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 53: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8262e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 54: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 55: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8450e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 56: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.5213e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 57: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7345e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.2830e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 58: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7242e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.2138e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 59: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9935e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.3222e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 60: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.4816e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 61: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.6362e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 62: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7722e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 63: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8660e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 64: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9049e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 65: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9791e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8996e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 66: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9126e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8726e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 67: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8845e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8417e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 68: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8841e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8151e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 69: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9035e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7930e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 70: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9381e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7725e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 71: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9863e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7492e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 72: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7180e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 73: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.6747e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 74: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.6184e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 75: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.5545e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 76: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.4972e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 77: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.4617e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 78: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9174e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.4590e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 79: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8554e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.4969e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 80: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.5831e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 81: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7282e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 82: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9001e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 83: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8739e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 84: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9403e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.6207e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 85: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8404e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.5156e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 86: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.3742e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 87: {'fwd_trans': {'weight': 1, 'value': tensor(0.9606, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9606, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(8.8907e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 88: {'fwd_trans': {'weight': 1, 'value': tensor(0.9587, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9587, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0016, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(8.5641e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 89: {'fwd_trans': {'weight': 1, 'value': tensor(0.9571, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9571, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0249, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0012, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(6.5885e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 90: {'fwd_trans': {'weight': 1, 'value': tensor(0.9567, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9568, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0249, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0012, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(6.5274e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 91: {'fwd_trans': {'weight': 1, 'value': tensor(0.9580, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9581, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0016, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(7.8587e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 92: {'fwd_trans': {'weight': 1, 'value': tensor(0.9561, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9562, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0315, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0253, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 93: {'fwd_trans': {'weight': 1, 'value': tensor(0.9562, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9562, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0315, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0253, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 94: {'fwd_trans': {'weight': 1, 'value': tensor(0.9579, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9579, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0250, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(7.4787e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 95: {'fwd_trans': {'weight': 1, 'value': tensor(0.9576, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9576, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0250, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(7.1445e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 96: {'fwd_trans': {'weight': 1, 'value': tensor(0.9563, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9564, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0314, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0253, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 97: {'fwd_trans': {'weight': 1, 'value': tensor(0.9571, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9571, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.6166e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 98: {'fwd_trans': {'weight': 1, 'value': tensor(0.9561, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9561, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0310, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0249, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0012, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(6.3078e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 99: {'fwd_trans': {'weight': 1, 'value': tensor(0.9560, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9560, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0310, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0249, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0012, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(6.2711e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}

Elapsed run time = 1252.1328 s
[38;21m2024-10-16 03:55:08,853 - base_optimization.py[line:174] - INFO: Start building design region parametrizations ...[0m
[38;21m2024-10-16 03:55:08,856 - metacoupler.py[line:88] - INFO: Start generating sources and monitors ...[0m
[38;21m2024-10-16 03:55:08,858 - metacoupler.py[line:119] - INFO: Start normalization run ...[0m
Using MPI version 4.1, 1 processes
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
MetaCoupler(size=(12.0, 18.0, 0), Nx=600, Ny=900)
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
MetaCouplerOptimization(
  (design_region_param_dict): ModuleDict(
    (design_region_0): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_1): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_2): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_3): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_4): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_5): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
  )
  (objective_layer): SimulatedFoM(adjoint_mode=ceviche_torch)
)
Step 0: {'fwd_trans': {'weight': 1, 'value': tensor(0.7341, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.7341, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0616, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0315, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0106, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(3.0335e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(2.8214e-07, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(4.0486e-07, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(1.0122e-06, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(9.4128e-07, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}}
Step 1: {'fwd_trans': {'weight': 1, 'value': tensor(0.5193, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.5193, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0721, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0215, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0489, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(2.7929e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(5.6572e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 2: {'fwd_trans': {'weight': 1, 'value': tensor(0.8028, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.8029, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0506, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0208, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0192, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0020, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0018, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(9.8929e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 3: {'fwd_trans': {'weight': 1, 'value': tensor(0.8020, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.8020, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0494, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0250, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0046, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0013, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0011, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 4: {'fwd_trans': {'weight': 1, 'value': tensor(0.7215, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.7215, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0742, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0255, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0178, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0003, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0016, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0013, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 5: {'fwd_trans': {'weight': 1, 'value': tensor(0.8856, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.8856, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0452, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0256, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0017, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(8.4551e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 6: {'fwd_trans': {'weight': 1, 'value': tensor(0.9061, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9061, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0420, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0269, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0027, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(2.7289e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0011, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(2.1214e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 7: {'fwd_trans': {'weight': 1, 'value': tensor(0.9101, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9102, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0373, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0273, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0104, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(7.1382e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0016, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(7.7741e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 8: {'fwd_trans': {'weight': 1, 'value': tensor(0.9481, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9481, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0340, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0263, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0044, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0010, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(6.9756e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 9: {'fwd_trans': {'weight': 1, 'value': tensor(0.9529, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9529, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0262, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0031, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 10: {'fwd_trans': {'weight': 1, 'value': tensor(0.9558, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9558, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0309, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0259, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0019, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.3316e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 11: {'fwd_trans': {'weight': 1, 'value': tensor(0.9559, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9559, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0330, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0255, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 12: {'fwd_trans': {'weight': 1, 'value': tensor(0.9554, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9554, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0323, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0250, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0033, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 13: {'fwd_trans': {'weight': 1, 'value': tensor(0.9575, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9575, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0318, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0257, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 14: {'fwd_trans': {'weight': 1, 'value': tensor(0.9592, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9592, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0316, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0259, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0016, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 15: {'fwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0310, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0255, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0010, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.6807e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 16: {'fwd_trans': {'weight': 1, 'value': tensor(0.9612, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9612, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0010, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 17: {'fwd_trans': {'weight': 1, 'value': tensor(0.9613, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9613, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 18: {'fwd_trans': {'weight': 1, 'value': tensor(0.9617, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9617, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0253, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 19: {'fwd_trans': {'weight': 1, 'value': tensor(0.9603, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9603, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0320, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0253, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 20: {'fwd_trans': {'weight': 1, 'value': tensor(0.9571, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9572, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0314, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0248, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0011, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0013, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0012, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(8.1731e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 21: {'fwd_trans': {'weight': 1, 'value': tensor(0.9586, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9587, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0315, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0256, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 22: {'fwd_trans': {'weight': 1, 'value': tensor(0.9606, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0253, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 23: {'fwd_trans': {'weight': 1, 'value': tensor(0.9594, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9594, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0331, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0258, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0013, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(6.8539e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 24: {'fwd_trans': {'weight': 1, 'value': tensor(0.9605, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9605, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0012, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(8.8339e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 25: {'fwd_trans': {'weight': 1, 'value': tensor(0.9601, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9601, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0250, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(7.3862e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(8.7160e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 26: {'fwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.1274e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7030e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 27: {'fwd_trans': {'weight': 1, 'value': tensor(0.9600, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9600, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0253, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0018, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 28: {'fwd_trans': {'weight': 1, 'value': tensor(0.9606, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9606, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0016, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 29: {'fwd_trans': {'weight': 1, 'value': tensor(0.9603, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9603, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(8.9185e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 30: {'fwd_trans': {'weight': 1, 'value': tensor(0.9604, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9604, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9609e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.6634e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 31: {'fwd_trans': {'weight': 1, 'value': tensor(0.9605, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9605, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7691e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 32: {'fwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0013, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 33: {'fwd_trans': {'weight': 1, 'value': tensor(0.9603, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9603, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0253, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 34: {'fwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0016, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 35: {'fwd_trans': {'weight': 1, 'value': tensor(0.9604, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9604, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0016, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 36: {'fwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0013, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.3299e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 37: {'fwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0013, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.2762e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 38: {'fwd_trans': {'weight': 1, 'value': tensor(0.9606, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0253, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 39: {'fwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 40: {'fwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0013, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 41: {'fwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0013, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 42: {'fwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 43: {'fwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9607, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0016, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 44: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0304, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 45: {'fwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0013, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7415e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 46: {'fwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8180e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.1394e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 47: {'fwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0300, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7217e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(8.7983e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 48: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.1832e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 49: {'fwd_trans': {'weight': 1, 'value': tensor(0.9608, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.2819e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 50: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.5431e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 51: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.5512e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8741e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 52: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.6128e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 53: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8262e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 54: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 55: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0303, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8450e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 56: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.5213e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 57: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7345e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.2830e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 58: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7242e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.2138e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 59: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9935e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.3222e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 60: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.4816e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 61: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.6362e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 62: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7722e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 63: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8660e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 64: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9049e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 65: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9791e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8996e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 66: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9126e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8726e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 67: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8845e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8417e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 68: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8841e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8151e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 69: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9035e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7930e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 70: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9381e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7725e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 71: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9863e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7492e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 72: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7180e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 73: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.6747e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 74: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.6184e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 75: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.5545e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 76: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.4972e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 77: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.4617e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 78: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9174e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.4590e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 79: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8554e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.4969e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 80: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.5831e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 81: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.7282e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 82: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9001e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 83: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8739e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 84: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.9403e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.6207e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 85: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0301, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.8404e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.5156e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 86: {'fwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9609, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.3742e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 87: {'fwd_trans': {'weight': 1, 'value': tensor(0.9606, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9606, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0302, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(8.8907e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 88: {'fwd_trans': {'weight': 1, 'value': tensor(0.9587, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9587, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0305, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0016, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0004, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(8.5641e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 89: {'fwd_trans': {'weight': 1, 'value': tensor(0.9571, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9571, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0307, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0249, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0012, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(6.5885e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 90: {'fwd_trans': {'weight': 1, 'value': tensor(0.9567, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9568, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0308, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0249, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0012, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(6.5274e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 91: {'fwd_trans': {'weight': 1, 'value': tensor(0.9580, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9581, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0251, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0016, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(7.8587e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 92: {'fwd_trans': {'weight': 1, 'value': tensor(0.9561, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9562, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0315, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0253, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0024, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 93: {'fwd_trans': {'weight': 1, 'value': tensor(0.9562, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9562, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0315, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0253, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 94: {'fwd_trans': {'weight': 1, 'value': tensor(0.9579, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9579, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0250, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0015, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(7.4787e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 95: {'fwd_trans': {'weight': 1, 'value': tensor(0.9576, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9576, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0306, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0250, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0014, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(7.1445e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 96: {'fwd_trans': {'weight': 1, 'value': tensor(0.9563, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9564, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0314, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0253, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0023, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 97: {'fwd_trans': {'weight': 1, 'value': tensor(0.9571, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9571, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0311, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0252, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0021, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(9.6166e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0006, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0002, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0009, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 98: {'fwd_trans': {'weight': 1, 'value': tensor(0.9561, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9561, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0310, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0249, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0012, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(6.3078e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}
Step 99: {'fwd_trans': {'weight': 1, 'value': tensor(0.9560, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_trans': {'weight': 1, 'value': tensor(0.9560, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0310, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_refl_trans': {'weight': -0.1, 'value': tensor(0.0249, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0012, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_xm': {'weight': 0, 'value': tensor(6.2711e-05, device='cuda:0', dtype=torch.float64,
       grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'fwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xp': {'weight': 0, 'value': tensor(0.0005, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_xm': {'weight': 0, 'value': tensor(0.0001, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_yp': {'weight': 0, 'value': tensor(0.0007, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}, 'bwd_rad_trans_ym': {'weight': 0, 'value': tensor(0.0008, device='cuda:0', dtype=torch.float64, grad_fn=<MeanBackward0>)}}

Elapsed run time = 1436.2019 s
[38;21m2024-10-17 02:23:34,367 - base_optimization.py[line:174] - INFO: Start building design region parametrizations ...[0m
[38;21m2024-10-17 02:23:34,370 - metacoupler.py[line:88] - INFO: Start generating sources and monitors ...[0m
[38;21m2024-10-17 02:23:34,372 - metacoupler.py[line:119] - INFO: Start normalization run ...[0m
Using MPI version 4.1, 1 processes
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
MetaCoupler(size=(12.0, 18.0, 0), Nx=600, Ny=900)
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
MetaCouplerOptimization(
  (design_region_param_dict): ModuleDict(
    (design_region_0): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_1): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_2): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_3): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_4): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_5): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
  )
  (objective_layer): SimulatedFoM(adjoint_mode=ceviche_torch)
)
Step 0: fwd_trans: 0.732, bwd_trans: 0.732, fwd_refl_trans: 0.066, bwd_refl_trans: 0.028, fwd_rad_trans_xp: 0.015, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.000, fwd_rad_trans_ym: 0.000, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.000, bwd_rad_trans_yp: 0.000, bwd_rad_trans_ym: 0.000, 
Step 1: fwd_trans: 0.416, bwd_trans: 0.416, fwd_refl_trans: 0.093, bwd_refl_trans: 0.021, fwd_rad_trans_xp: 0.042, fwd_rad_trans_xm: 0.002, fwd_rad_trans_yp: 0.006, fwd_rad_trans_ym: 0.006, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.000, bwd_rad_trans_yp: 0.000, bwd_rad_trans_ym: 0.000, 
Step 2: fwd_trans: 0.683, bwd_trans: 0.683, fwd_refl_trans: 0.092, bwd_refl_trans: 0.020, fwd_rad_trans_xp: 0.011, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.000, bwd_rad_trans_yp: 0.000, bwd_rad_trans_ym: 0.000, 
Step 3: fwd_trans: 0.766, bwd_trans: 0.766, fwd_refl_trans: 0.056, bwd_refl_trans: 0.023, fwd_rad_trans_xp: 0.008, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.003, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.004, bwd_rad_trans_ym: 0.004, 
Step 4: fwd_trans: 0.821, bwd_trans: 0.821, fwd_refl_trans: 0.041, bwd_refl_trans: 0.023, fwd_rad_trans_xp: 0.007, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.001, fwd_rad_trans_ym: 0.001, bwd_rad_trans_xp: 0.001, bwd_rad_trans_xm: 0.000, bwd_rad_trans_yp: 0.002, bwd_rad_trans_ym: 0.002, 
Step 5: fwd_trans: 0.875, bwd_trans: 0.875, fwd_refl_trans: 0.044, bwd_refl_trans: 0.027, fwd_rad_trans_xp: 0.007, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.000, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 6: fwd_trans: 0.868, bwd_trans: 0.868, fwd_refl_trans: 0.074, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.006, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.006, fwd_rad_trans_ym: 0.006, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.000, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 7: fwd_trans: 0.874, bwd_trans: 0.874, fwd_refl_trans: 0.069, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.012, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.000, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 8: fwd_trans: 0.898, bwd_trans: 0.898, fwd_refl_trans: 0.051, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.005, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.003, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 9: fwd_trans: 0.916, bwd_trans: 0.916, fwd_refl_trans: 0.045, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.004, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.001, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 10: fwd_trans: 0.931, bwd_trans: 0.931, fwd_refl_trans: 0.041, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.004, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.001, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 11: fwd_trans: 0.934, bwd_trans: 0.934, fwd_refl_trans: 0.041, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.003, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.001, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.002, bwd_rad_trans_ym: 0.002, 
Step 12: fwd_trans: 0.934, bwd_trans: 0.934, fwd_refl_trans: 0.041, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.003, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 13: fwd_trans: 0.934, bwd_trans: 0.934, fwd_refl_trans: 0.041, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.004, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 14: fwd_trans: 0.940, bwd_trans: 0.940, fwd_refl_trans: 0.040, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.004, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 15: fwd_trans: 0.945, bwd_trans: 0.945, fwd_refl_trans: 0.039, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.003, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 16: fwd_trans: 0.949, bwd_trans: 0.949, fwd_refl_trans: 0.038, bwd_refl_trans: 0.031, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.001, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 17: fwd_trans: 0.949, bwd_trans: 0.949, fwd_refl_trans: 0.037, bwd_refl_trans: 0.031, fwd_rad_trans_xp: 0.003, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.003, bwd_rad_trans_xp: 0.001, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 18: fwd_trans: 0.948, bwd_trans: 0.948, fwd_refl_trans: 0.036, bwd_refl_trans: 0.031, fwd_rad_trans_xp: 0.004, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.003, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 19: fwd_trans: 0.948, bwd_trans: 0.948, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.004, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.003, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 20: fwd_trans: 0.948, bwd_trans: 0.948, fwd_refl_trans: 0.037, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.005, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.003, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 21: fwd_trans: 0.949, bwd_trans: 0.949, fwd_refl_trans: 0.037, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.004, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.003, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 22: fwd_trans: 0.951, bwd_trans: 0.951, fwd_refl_trans: 0.037, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.003, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 23: fwd_trans: 0.952, bwd_trans: 0.952, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.003, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 24: fwd_trans: 0.954, bwd_trans: 0.954, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 25: fwd_trans: 0.954, bwd_trans: 0.954, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 26: fwd_trans: 0.954, bwd_trans: 0.954, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 27: fwd_trans: 0.954, bwd_trans: 0.954, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 28: fwd_trans: 0.954, bwd_trans: 0.954, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 29: fwd_trans: 0.954, bwd_trans: 0.954, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 30: fwd_trans: 0.955, bwd_trans: 0.955, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 31: fwd_trans: 0.955, bwd_trans: 0.955, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 32: fwd_trans: 0.955, bwd_trans: 0.955, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 33: fwd_trans: 0.956, bwd_trans: 0.956, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 34: fwd_trans: 0.956, bwd_trans: 0.956, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 35: fwd_trans: 0.956, bwd_trans: 0.956, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 36: fwd_trans: 0.956, bwd_trans: 0.956, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 37: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 38: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 39: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 40: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 41: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.001, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 42: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.001, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 43: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.001, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 44: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 45: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 46: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 47: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 48: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 49: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 50: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 51: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 52: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 53: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 54: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 55: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 56: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 57: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 58: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 59: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 60: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 61: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 62: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 63: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 64: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 65: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 66: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 67: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 68: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 69: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 70: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 71: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 72: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 73: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 74: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 75: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 76: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 77: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 78: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 79: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 80: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 81: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 82: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 83: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 84: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 85: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 86: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 87: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 88: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 89: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 90: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 91: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 92: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.001, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 93: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.034, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.001, fwd_rad_trans_ym: 0.001, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 94: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.001, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 95: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.001, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 96: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.032, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.001, fwd_rad_trans_ym: 0.001, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 97: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.001, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 98: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.001, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 99: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 

Elapsed run time = 1315.0581 s
[38;21m2024-10-17 11:13:01,861 - base_optimization.py[line:174] - INFO: Start building design region parametrizations ...[0m
[38;21m2024-10-17 11:13:01,864 - metacoupler.py[line:88] - INFO: Start generating sources and monitors ...[0m
[38;21m2024-10-17 11:13:01,866 - metacoupler.py[line:119] - INFO: Start normalization run ...[0m
Using MPI version 4.1, 1 processes
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
MetaCoupler(size=(12.0, 18.0, 0), Nx=600, Ny=900)
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
MetaCouplerOptimization(
  (design_region_param_dict): ModuleDict(
    (design_region_0): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_1): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_2): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_3): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_4): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_5): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
  )
  (objective_layer): SimulatedFoM(adjoint_mode=ceviche_torch)
)
Step 0: fwd_trans: 0.732, bwd_trans: 0.732, fwd_refl_trans: 0.066, bwd_refl_trans: 0.028, fwd_rad_trans_xp: 0.015, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.000, fwd_rad_trans_ym: 0.000, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.000, bwd_rad_trans_yp: 0.000, bwd_rad_trans_ym: 0.000, 
Step 1: fwd_trans: 0.416, bwd_trans: 0.416, fwd_refl_trans: 0.093, bwd_refl_trans: 0.021, fwd_rad_trans_xp: 0.042, fwd_rad_trans_xm: 0.002, fwd_rad_trans_yp: 0.006, fwd_rad_trans_ym: 0.006, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.000, bwd_rad_trans_yp: 0.000, bwd_rad_trans_ym: 0.000, 
Step 2: fwd_trans: 0.683, bwd_trans: 0.683, fwd_refl_trans: 0.092, bwd_refl_trans: 0.020, fwd_rad_trans_xp: 0.011, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.000, bwd_rad_trans_yp: 0.000, bwd_rad_trans_ym: 0.000, 
Step 3: fwd_trans: 0.766, bwd_trans: 0.766, fwd_refl_trans: 0.056, bwd_refl_trans: 0.023, fwd_rad_trans_xp: 0.008, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.003, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.004, bwd_rad_trans_ym: 0.004, 
Step 4: fwd_trans: 0.821, bwd_trans: 0.821, fwd_refl_trans: 0.041, bwd_refl_trans: 0.023, fwd_rad_trans_xp: 0.007, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.001, fwd_rad_trans_ym: 0.001, bwd_rad_trans_xp: 0.001, bwd_rad_trans_xm: 0.000, bwd_rad_trans_yp: 0.002, bwd_rad_trans_ym: 0.002, 
Step 5: fwd_trans: 0.875, bwd_trans: 0.875, fwd_refl_trans: 0.044, bwd_refl_trans: 0.027, fwd_rad_trans_xp: 0.007, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.000, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 6: fwd_trans: 0.868, bwd_trans: 0.868, fwd_refl_trans: 0.074, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.006, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.006, fwd_rad_trans_ym: 0.006, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.000, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 7: fwd_trans: 0.874, bwd_trans: 0.874, fwd_refl_trans: 0.069, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.012, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.000, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 8: fwd_trans: 0.898, bwd_trans: 0.898, fwd_refl_trans: 0.051, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.005, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.003, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 9: fwd_trans: 0.916, bwd_trans: 0.916, fwd_refl_trans: 0.045, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.004, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.001, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 10: fwd_trans: 0.931, bwd_trans: 0.931, fwd_refl_trans: 0.041, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.004, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.001, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 11: fwd_trans: 0.934, bwd_trans: 0.934, fwd_refl_trans: 0.041, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.003, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.001, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.002, bwd_rad_trans_ym: 0.002, 
Step 12: fwd_trans: 0.934, bwd_trans: 0.934, fwd_refl_trans: 0.041, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.003, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 13: fwd_trans: 0.934, bwd_trans: 0.934, fwd_refl_trans: 0.041, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.004, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 14: fwd_trans: 0.940, bwd_trans: 0.940, fwd_refl_trans: 0.040, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.004, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 15: fwd_trans: 0.945, bwd_trans: 0.945, fwd_refl_trans: 0.039, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.003, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 16: fwd_trans: 0.949, bwd_trans: 0.949, fwd_refl_trans: 0.038, bwd_refl_trans: 0.031, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.001, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 17: fwd_trans: 0.949, bwd_trans: 0.949, fwd_refl_trans: 0.037, bwd_refl_trans: 0.031, fwd_rad_trans_xp: 0.003, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.003, bwd_rad_trans_xp: 0.001, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 18: fwd_trans: 0.948, bwd_trans: 0.948, fwd_refl_trans: 0.036, bwd_refl_trans: 0.031, fwd_rad_trans_xp: 0.004, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.003, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 19: fwd_trans: 0.948, bwd_trans: 0.948, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.004, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.003, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 20: fwd_trans: 0.948, bwd_trans: 0.948, fwd_refl_trans: 0.037, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.005, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.003, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 21: fwd_trans: 0.949, bwd_trans: 0.949, fwd_refl_trans: 0.037, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.004, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.003, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 22: fwd_trans: 0.951, bwd_trans: 0.951, fwd_refl_trans: 0.037, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.003, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 23: fwd_trans: 0.952, bwd_trans: 0.952, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.003, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 24: fwd_trans: 0.954, bwd_trans: 0.954, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 25: fwd_trans: 0.954, bwd_trans: 0.954, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 26: fwd_trans: 0.954, bwd_trans: 0.954, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 27: fwd_trans: 0.954, bwd_trans: 0.954, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 28: fwd_trans: 0.954, bwd_trans: 0.954, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 29: fwd_trans: 0.954, bwd_trans: 0.954, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 30: fwd_trans: 0.955, bwd_trans: 0.955, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 31: fwd_trans: 0.955, bwd_trans: 0.955, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 32: fwd_trans: 0.955, bwd_trans: 0.955, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 33: fwd_trans: 0.956, bwd_trans: 0.956, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 34: fwd_trans: 0.956, bwd_trans: 0.956, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 35: fwd_trans: 0.956, bwd_trans: 0.956, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 36: fwd_trans: 0.956, bwd_trans: 0.956, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 37: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 38: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 39: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 40: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 41: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.001, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 42: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.001, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 43: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.001, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 44: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 45: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 46: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 47: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 48: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 49: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 50: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 51: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 52: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 53: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 54: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 55: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 56: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 57: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 58: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 59: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 60: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 61: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 62: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 63: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 64: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 65: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 66: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 67: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 68: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 69: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 70: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 71: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 72: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 73: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 74: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 75: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 76: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 77: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 78: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 79: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 80: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 81: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 82: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 83: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 84: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 85: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 86: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 87: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 88: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 89: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 90: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 91: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 92: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.001, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 93: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.034, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.001, fwd_rad_trans_ym: 0.001, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 94: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.001, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 95: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.001, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 96: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.032, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.001, fwd_rad_trans_ym: 0.001, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 97: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.001, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 98: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.001, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 99: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 

Elapsed run time = 1315.2137 s
[38;21m2024-10-17 12:48:24,924 - base_optimization.py[line:174] - INFO: Start building design region parametrizations ...[0m
[38;21m2024-10-17 12:48:24,928 - metacoupler.py[line:88] - INFO: Start generating sources and monitors ...[0m
[38;21m2024-10-17 12:48:24,930 - metacoupler.py[line:119] - INFO: Start normalization run ...[0m
Using MPI version 4.1, 1 processes
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
MetaCoupler(size=(12.0, 18.0, 0), Nx=600, Ny=900)
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
FloatProgress(value=0.0, description='0% done ', max=0.0)
MetaCouplerOptimization(
  (design_region_param_dict): ModuleDict(
    (design_region_0): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_1): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_2): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_3): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_4): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
    (design_region_5): LeveSetParameterization(
      (weights): ParameterDict(  (ls_knots): Parameter containing: [torch.cuda.FloatTensor of size 1x301 (cuda:0)])
      (binary_projection): HeavisideProjection(
        (clip_layer): ClipLayer(mode=both)
      )
    )
  )
  (objective_layer): SimulatedFoM(adjoint_mode=ceviche_torch)
)
Step 0: fwd_trans: 0.732, bwd_trans: 0.732, fwd_refl_trans: 0.066, bwd_refl_trans: 0.028, fwd_rad_trans_xp: 0.015, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.000, fwd_rad_trans_ym: 0.000, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.000, bwd_rad_trans_yp: 0.000, bwd_rad_trans_ym: 0.000, 
Step 1: fwd_trans: 0.416, bwd_trans: 0.416, fwd_refl_trans: 0.093, bwd_refl_trans: 0.021, fwd_rad_trans_xp: 0.042, fwd_rad_trans_xm: 0.002, fwd_rad_trans_yp: 0.006, fwd_rad_trans_ym: 0.006, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.000, bwd_rad_trans_yp: 0.000, bwd_rad_trans_ym: 0.000, 
Step 2: fwd_trans: 0.683, bwd_trans: 0.683, fwd_refl_trans: 0.092, bwd_refl_trans: 0.020, fwd_rad_trans_xp: 0.011, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.000, bwd_rad_trans_yp: 0.000, bwd_rad_trans_ym: 0.000, 
Step 3: fwd_trans: 0.766, bwd_trans: 0.766, fwd_refl_trans: 0.056, bwd_refl_trans: 0.023, fwd_rad_trans_xp: 0.008, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.003, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.004, bwd_rad_trans_ym: 0.004, 
Step 4: fwd_trans: 0.821, bwd_trans: 0.821, fwd_refl_trans: 0.041, bwd_refl_trans: 0.023, fwd_rad_trans_xp: 0.007, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.001, fwd_rad_trans_ym: 0.001, bwd_rad_trans_xp: 0.001, bwd_rad_trans_xm: 0.000, bwd_rad_trans_yp: 0.002, bwd_rad_trans_ym: 0.002, 
Step 5: fwd_trans: 0.875, bwd_trans: 0.875, fwd_refl_trans: 0.044, bwd_refl_trans: 0.027, fwd_rad_trans_xp: 0.007, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.000, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 6: fwd_trans: 0.868, bwd_trans: 0.868, fwd_refl_trans: 0.074, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.006, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.006, fwd_rad_trans_ym: 0.006, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.000, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 7: fwd_trans: 0.874, bwd_trans: 0.874, fwd_refl_trans: 0.069, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.012, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.000, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 8: fwd_trans: 0.898, bwd_trans: 0.898, fwd_refl_trans: 0.051, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.005, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.003, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 9: fwd_trans: 0.916, bwd_trans: 0.916, fwd_refl_trans: 0.045, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.004, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.001, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 10: fwd_trans: 0.931, bwd_trans: 0.931, fwd_refl_trans: 0.041, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.004, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.001, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 11: fwd_trans: 0.934, bwd_trans: 0.934, fwd_refl_trans: 0.041, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.003, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.001, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.002, bwd_rad_trans_ym: 0.002, 
Step 12: fwd_trans: 0.934, bwd_trans: 0.934, fwd_refl_trans: 0.041, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.003, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 13: fwd_trans: 0.934, bwd_trans: 0.934, fwd_refl_trans: 0.041, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.004, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 14: fwd_trans: 0.940, bwd_trans: 0.940, fwd_refl_trans: 0.040, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.004, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 15: fwd_trans: 0.945, bwd_trans: 0.945, fwd_refl_trans: 0.039, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.003, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 16: fwd_trans: 0.949, bwd_trans: 0.949, fwd_refl_trans: 0.038, bwd_refl_trans: 0.031, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.004, fwd_rad_trans_ym: 0.004, bwd_rad_trans_xp: 0.001, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 17: fwd_trans: 0.949, bwd_trans: 0.949, fwd_refl_trans: 0.037, bwd_refl_trans: 0.031, fwd_rad_trans_xp: 0.003, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.003, bwd_rad_trans_xp: 0.001, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 18: fwd_trans: 0.948, bwd_trans: 0.948, fwd_refl_trans: 0.036, bwd_refl_trans: 0.031, fwd_rad_trans_xp: 0.004, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.003, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 19: fwd_trans: 0.948, bwd_trans: 0.948, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.004, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.003, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 20: fwd_trans: 0.948, bwd_trans: 0.948, fwd_refl_trans: 0.037, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.005, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.003, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 21: fwd_trans: 0.949, bwd_trans: 0.949, fwd_refl_trans: 0.037, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.004, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.003, fwd_rad_trans_ym: 0.003, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 22: fwd_trans: 0.951, bwd_trans: 0.951, fwd_refl_trans: 0.037, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.003, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 23: fwd_trans: 0.952, bwd_trans: 0.952, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.003, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 24: fwd_trans: 0.954, bwd_trans: 0.954, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 25: fwd_trans: 0.954, bwd_trans: 0.954, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 26: fwd_trans: 0.954, bwd_trans: 0.954, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 27: fwd_trans: 0.954, bwd_trans: 0.954, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 28: fwd_trans: 0.954, bwd_trans: 0.954, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 29: fwd_trans: 0.954, bwd_trans: 0.954, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 30: fwd_trans: 0.955, bwd_trans: 0.955, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 31: fwd_trans: 0.955, bwd_trans: 0.955, fwd_refl_trans: 0.036, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 32: fwd_trans: 0.955, bwd_trans: 0.955, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.001, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 33: fwd_trans: 0.956, bwd_trans: 0.956, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 34: fwd_trans: 0.956, bwd_trans: 0.956, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 35: fwd_trans: 0.956, bwd_trans: 0.956, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 36: fwd_trans: 0.956, bwd_trans: 0.956, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 37: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 38: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 39: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 40: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 41: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.001, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 42: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.001, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 43: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.001, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 44: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 45: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 46: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.035, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 47: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 48: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 49: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 50: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 51: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 52: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 53: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 54: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 55: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 56: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 57: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 58: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 59: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 60: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 61: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 62: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 63: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 64: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 65: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 66: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 67: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 68: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 69: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 70: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 71: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 72: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 73: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 74: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 75: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 76: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 77: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 78: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 79: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 80: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 81: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 82: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 83: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 84: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 85: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 86: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 87: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 88: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 89: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 90: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 91: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 92: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.001, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 93: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.034, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.001, fwd_rad_trans_ym: 0.001, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 94: fwd_trans: 0.959, bwd_trans: 0.959, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.001, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 95: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.033, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.001, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 96: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.032, bwd_refl_trans: 0.029, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.001, fwd_rad_trans_ym: 0.001, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 97: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.001, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 98: fwd_trans: 0.958, bwd_trans: 0.958, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.001, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 
Step 99: fwd_trans: 0.957, bwd_trans: 0.957, fwd_refl_trans: 0.034, bwd_refl_trans: 0.030, fwd_rad_trans_xp: 0.002, fwd_rad_trans_xm: 0.000, fwd_rad_trans_yp: 0.002, fwd_rad_trans_ym: 0.002, bwd_rad_trans_xp: 0.000, bwd_rad_trans_xm: 0.001, bwd_rad_trans_yp: 0.001, bwd_rad_trans_ym: 0.001, 

Elapsed run time = 1313.6562 s
Using MPI version 4.1, 1 processes
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/./data/fdfd/generate_metacoupler.py", line 128, in <module>
    p.map(metacoupler_opt, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 320, in wait
    waiter.acquire()
KeyboardInterrupt

Elapsed run time = 7.4435 s
[38;21m2024-10-21 03:43:17,220 - train.py[line:80] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=100', '--run.batch_size=2', '--run.gpu_id=3', '--run.log_interval=200', '--run.random_state=59', '--run.fp16=False', '--criterion.name=mse', '--criterion.weight=1', '--test_criterion.name=mse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=0.0001', '--plot.train=False', '--plot.valid=False', '--plot.test=False', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-test_neurOLight_id-0', '--optimizer.lr=0.02', '--model.name=NeurOLight2d', '--model.in_channels=5', '--model.kernel_list=[72, 72, 72, 72, 72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-0', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-21 07:29:08,686 - train.py[line:94] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-21 10:54:27,916 - train.py[line:80] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=3', '--run.log_interval=200', '--run.random_state=59', '--run.fp16=False', '--criterion.name=mse', '--criterion.weight=1', '--test_criterion.name=mse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=False', '--plot.valid=False', '--plot.test=False', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-test_neurOLight_id-1', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=5', '--model.kernel_list=[72, 72, 72, 72, 72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-1', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-21 10:58:43,951 - train.py[line:80] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=2', '--run.log_interval=200', '--run.random_state=59', '--run.fp16=False', '--criterion.name=mse', '--criterion.weight=1', '--test_criterion.name=mse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=False', '--plot.valid=False', '--plot.test=False', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-norm_input_src_id-1', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=5', '--model.kernel_list=[72, 72, 72, 72, 72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-1', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
Process ForkPoolWorker-8:
Process ForkPoolWorker-3:
Process ForkPoolWorker-7:
Process ForkPoolWorker-5:
Process ForkPoolWorker-6:
Process ForkPoolWorker-4:
Process ForkPoolWorker-2:
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/neurolight/train.py", line 93, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 320, in wait
    waiter.acquire()
KeyboardInterrupt
Process ForkPoolWorker-7:
Process ForkPoolWorker-6:
Process ForkPoolWorker-8:
Process ForkPoolWorker-5:
Process ForkPoolWorker-2:
Process ForkPoolWorker-4:
Process ForkPoolWorker-1:
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
KeyboardInterrupt
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 365, in get
    res = self._reader.recv_bytes()
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
KeyboardInterrupt
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/neurolight/train.py", line 93, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 320, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-10-21 11:01:11,621 - train.py[line:80] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=2', '--run.log_interval=200', '--run.random_state=59', '--run.fp16=False', '--criterion.name=mse', '--criterion.weight=1', '--test_criterion.name=mse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=False', '--plot.valid=False', '--plot.test=False', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-norm_input_src_id-2', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=5', '--model.kernel_list=[72, 72, 72, 72, 72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-2_dcrp-norm_input_src', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-21 11:02:01,178 - train.py[line:80] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=3', '--run.log_interval=200', '--run.random_state=59', '--run.fp16=False', '--criterion.name=mse', '--criterion.weight=1', '--test_criterion.name=mse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=False', '--plot.valid=False', '--plot.test=False', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-no_norm_input_src_id-1', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=5', '--model.kernel_list=[72, 72, 72, 72, 72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-1_dcrp-no_norm_input_src', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-21 11:02:02,638 - train.py[line:94] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-21 11:05:27,909 - train.py[line:80] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=3', '--run.log_interval=200', '--run.random_state=59', '--run.fp16=False', '--criterion.name=mse', '--criterion.weight=1', '--test_criterion.name=mse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=False', '--plot.valid=False', '--plot.test=False', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-norm_input_src_id-2', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=5', '--model.kernel_list=[72, 72, 72, 72, 72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-2_dcrp-norm_input_src', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-21 11:05:35,265 - train.py[line:94] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-21 11:07:32,745 - train.py[line:80] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=2', '--run.log_interval=200', '--run.random_state=59', '--run.fp16=False', '--criterion.name=mse', '--criterion.weight=1', '--test_criterion.name=mse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=False', '--plot.valid=False', '--plot.test=False', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-norm_input_src_id-2', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=5', '--model.kernel_list=[72, 72, 72, 72, 72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-2_dcrp-norm_input_src', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-21 11:08:27,855 - train.py[line:94] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-21 11:14:26,105 - train.py[line:80] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=2', '--run.log_interval=200', '--run.random_state=59', '--run.fp16=False', '--criterion.name=mse', '--criterion.weight=1', '--test_criterion.name=mse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=False', '--plot.valid=False', '--plot.test=False', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-norm_input_src_id-2', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=5', '--model.kernel_list=[72, 72, 72, 72, 72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-2_dcrp-norm_input_src', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-21 11:15:16,421 - train.py[line:94] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-21 11:17:21,971 - train.py[line:80] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=2', '--run.log_interval=200', '--run.random_state=59', '--run.fp16=False', '--criterion.name=mse', '--criterion.weight=1', '--test_criterion.name=mse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=False', '--plot.valid=False', '--plot.test=False', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-norm_input_src_id-2', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=5', '--model.kernel_list=[72, 72, 72, 72, 72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-2_dcrp-norm_input_src', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-21 11:18:11,351 - train.py[line:94] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-21 11:24:20,216 - train.py[line:80] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=2', '--run.log_interval=200', '--run.random_state=59', '--run.fp16=False', '--criterion.name=mse', '--criterion.weight=1', '--test_criterion.name=mse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=False', '--plot.valid=False', '--plot.test=False', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-norm_input_src_id-2', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=5', '--model.kernel_list=[72, 72, 72, 72, 72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-2_dcrp-norm_input_src', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-21 11:25:16,227 - train.py[line:94] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-21 11:26:15,158 - train.py[line:80] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=2', '--run.log_interval=200', '--run.random_state=59', '--run.fp16=False', '--criterion.name=mse', '--criterion.weight=1', '--test_criterion.name=mse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=False', '--plot.valid=False', '--plot.test=False', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-norm_input_src_id-2', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=5', '--model.kernel_list=[72, 72, 72, 72, 72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-2_dcrp-norm_input_src', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-21 11:27:05,567 - train.py[line:94] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-21 12:56:13,950 - train.py[line:94] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-22 02:28:56,471 - train.py[line:80] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=2', '--run.log_interval=50', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=False', '--plot.valid=False', '--plot.test=False', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-norm_input_src_id-2', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.kernel_list=[72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-2_dcrp-norm_input_src', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-22 02:28:56,474 - train.py[line:80] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=3', '--run.log_interval=50', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=2.5e-06', '--plot.train=False', '--plot.valid=False', '--plot.test=False', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-norm_input_src_id-3', '--optimizer.lr=0.0005', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.kernel_list=[72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-3_dcrp-norm_input_src', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
Process ForkPoolWorker-8:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Process ForkPoolWorker-7:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Process ForkPoolWorker-6:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Process ForkPoolWorker-2:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Process ForkPoolWorker-3:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 365, in get
    res = self._reader.recv_bytes()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
KeyboardInterrupt
Process ForkPoolWorker-5:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Process ForkPoolWorker-1:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 48, in mapstar
    return list(map(*args))
  File "/home/pingchua/projects/MAPS/scripts/nn/neurolight/train.py", line 81, in task_launcher
    subprocess.call(pres + exp, stderr=wfid, stdout=wfid)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/subprocess.py", line 347, in call
    return p.wait(timeout=timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/subprocess.py", line 1209, in wait
    return self._wait(timeout=timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/subprocess.py", line 1959, in _wait
    (pid, sts) = self._try_wait(0)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/subprocess.py", line 1917, in _try_wait
    (pid, sts) = os.waitpid(self.pid, wait_flags)
KeyboardInterrupt
Process ForkPoolWorker-4:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 48, in mapstar
    return list(map(*args))
  File "/home/pingchua/projects/MAPS/scripts/nn/neurolight/train.py", line 81, in task_launcher
    subprocess.call(pres + exp, stderr=wfid, stdout=wfid)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/subprocess.py", line 347, in call
    return p.wait(timeout=timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/subprocess.py", line 1209, in wait
    return self._wait(timeout=timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/subprocess.py", line 1959, in _wait
    (pid, sts) = self._try_wait(0)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/subprocess.py", line 1917, in _try_wait
    (pid, sts) = os.waitpid(self.pid, wait_flags)
KeyboardInterrupt
Process ForkPoolWorker-16:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Process ForkPoolWorker-15:
Process ForkPoolWorker-9:
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
KeyboardInterrupt
Process ForkPoolWorker-10:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Process ForkPoolWorker-11:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Process ForkPoolWorker-12:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Process ForkPoolWorker-13:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Process ForkPoolWorker-14:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/neurolight/train.py", line 94, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 320, in wait
    waiter.acquire()
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/neurolight/train.py", line 93, in <module>
    with Pool(8) as p:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 739, in __exit__
    self.terminate()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 657, in terminate
    self._terminate()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 695, in _terminate_pool
    cls._help_stuff_finish(inqueue, task_handler, len(pool))
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 675, in _help_stuff_finish
    inqueue._rlock.acquire()
KeyboardInterrupt
[38;21m2024-10-22 02:32:35,239 - train.py[line:80] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=2', '--run.log_interval=50', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=False', '--plot.valid=False', '--plot.test=False', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-norm_input_src_id-2', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.kernel_list=[72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-2_dcrp-norm_input_src', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-22 02:34:06,022 - train.py[line:80] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=3', '--run.log_interval=50', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=2.5e-06', '--plot.train=False', '--plot.valid=False', '--plot.test=False', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-norm_input_src_id-3', '--optimizer.lr=0.0005', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.kernel_list=[72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-3_dcrp-norm_input_src', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-22 02:35:42,391 - train.py[line:95] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-22 04:50:08,181 - train.py[line:95] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-22 10:52:18,833 - train.py[line:80] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=3', '--run.log_interval=50', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=2.5e-06', '--plot.train=False', '--plot.valid=False', '--plot.test=False', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-norm_input_src_id-3', '--optimizer.lr=0.0005', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.kernel_list=[72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-3_dcrp-norm_input_src', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-22 11:05:11,904 - train.py[line:80] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=50', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=False', '--plot.valid=False', '--plot.test=False', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-no_adj_id-4', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.kernel_list=[72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-4_dcrp-no_adj', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-22 13:13:26,833 - train.py[line:95] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-22 13:24:48,506 - train.py[line:96] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-23 00:11:08,532 - train.py[line:83] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=1', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=0.0001', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-no_adj_id-6', '--optimizer.lr=0.02', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.out_channels=2', '--model.kernel_list=[72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-6_dcrp-no_adj', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
Process ForkPoolWorker-8:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Process ForkPoolWorker-2:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 365, in get
    res = self._reader.recv_bytes()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
KeyboardInterrupt
Process ForkPoolWorker-3:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Process ForkPoolWorker-7:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Process ForkPoolWorker-6:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Process ForkPoolWorker-5:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Process ForkPoolWorker-4:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Process ForkPoolWorker-1:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 48, in mapstar
    return list(map(*args))
  File "/home/pingchua/projects/MAPS/scripts/nn/neurolight/train.py", line 84, in task_launcher
    subprocess.call(pres + exp, stderr=wfid, stdout=wfid)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/subprocess.py", line 347, in call
    return p.wait(timeout=timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/subprocess.py", line 1209, in wait
    return self._wait(timeout=timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/subprocess.py", line 1959, in _wait
    (pid, sts) = self._try_wait(0)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/subprocess.py", line 1917, in _try_wait
    (pid, sts) = os.waitpid(self.pid, wait_flags)
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/neurolight/train.py", line 100, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 320, in wait
    waiter.acquire()
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/neurolight/train.py", line 99, in <module>
    with Pool(8) as p:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 739, in __exit__
    self.terminate()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 657, in terminate
    self._terminate()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 695, in _terminate_pool
    cls._help_stuff_finish(inqueue, task_handler, len(pool))
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 675, in _help_stuff_finish
    inqueue._rlock.acquire()
KeyboardInterrupt
[38;21m2024-10-23 00:27:26,960 - train.py[line:83] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=1', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=2.5e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-no_adj_id-6', '--optimizer.lr=0.005', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.out_channels=2', '--model.kernel_list=[72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-6_dcrp-no_adj', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-23 02:14:02,190 - train.py[line:83] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=2', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=2.5e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-no_adj_id-7', '--optimizer.lr=0.005', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.out_channels=2', '--model.kernel_list=[72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-7_dcrp-no_adj', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
Process ForkPoolWorker-1:
Process ForkPoolWorker-4:
Process ForkPoolWorker-3:
Process ForkPoolWorker-7:
Process ForkPoolWorker-5:
Process ForkPoolWorker-8:
Process ForkPoolWorker-6:
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/neurolight/train.py", line 101, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 320, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-10-23 02:15:06,408 - train.py[line:83] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=2', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-no_adj_id-7', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.out_channels=2', '--model.kernel_list=[72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-7_dcrp-no_adj', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-23 07:51:50,219 - train.py[line:101] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-23 08:55:32,436 - train.py[line:102] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-23 13:24:09,418 - train.py[line:83] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-only_fwd_Ez_id-8', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.out_channels=2', '--model.kernel_list=[72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-8_dcrp-only_fwd_Ez', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-23 13:26:53,370 - train.py[line:103] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-23 13:29:01,947 - train.py[line:83] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-only_fwd_Ez_id-8', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.out_channels=2', '--model.kernel_list=[72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-8_dcrp-only_fwd_Ez', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-23 13:31:49,769 - train.py[line:103] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-23 13:40:06,130 - train.py[line:83] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-only_fwd_Ez_id-8', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.out_channels=2', '--model.kernel_list=[72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-8_dcrp-only_fwd_Ez', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-23 13:42:50,768 - train.py[line:103] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-23 13:44:37,488 - train.py[line:83] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-only_fwd_Ez_id-8', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.out_channels=2', '--model.kernel_list=[72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-8_dcrp-only_fwd_Ez', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-23 13:47:25,238 - train.py[line:103] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-23 13:54:46,369 - train.py[line:83] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-only_fwd_Ez_id-8', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.out_channels=2', '--model.kernel_list=[72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-8_dcrp-only_fwd_Ez', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-23 13:57:35,482 - train.py[line:103] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-23 14:01:09,031 - train.py[line:83] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-only_fwd_Ez_id-8', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.out_channels=2', '--model.kernel_list=[72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1]', '--model.mode_list=[(50, 60), (50, 60), (50, 60), (50, 60)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-8_dcrp-only_fwd_Ez', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-23 14:05:16,525 - train.py[line:84] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=1', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-only_fwd_Ez_more_mode_id-9', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.out_channels=2', '--model.kernel_list=[72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1]', '--model.mode_list=[(100, 120), (100, 120), (100, 120), (100, 120)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-9_dcrp-only_fwd_Ez_more_mode', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
Process ForkPoolWorker-2:
Process ForkPoolWorker-8:
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 365, in get
    res = self._reader.recv_bytes()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/neurolight/train.py", line 104, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 320, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-10-23 14:09:44,803 - train.py[line:84] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=1', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-only_fwd_Ez_more_mode_id-9', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.out_channels=2', '--model.kernel_list=[72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1]', '--model.mode_list=[(100, 120), (100, 120), (100, 120), (100, 120)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-9_dcrp-only_fwd_Ez_more_mode', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-23 14:54:53,456 - train.py[line:84] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=2', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-only_fwd_Ez_max_mode_id-10', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.out_channels=2', '--model.kernel_list=[72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1]', '--model.mode_list=[(200, 300), (200, 300), (200, 300), (200, 300)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-10_dcrp-only_fwd_Ez_max_mode', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-23 14:55:49,287 - train.py[line:106] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-23 14:56:18,532 - train.py[line:84] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=2', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-only_fwd_Ez_max_mode_deeper_id-10', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.out_channels=2', '--model.kernel_list=[72, 72, 72, 72, 72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.mode_list=[(100, 151), (100, 151), (100, 151), (100, 151), (100, 151), (100, 151), (100, 151), (100, 151)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-10_dcrp-only_fwd_Ez_max_mode_deeper', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
[38;21m2024-10-23 16:10:54,749 - train.py[line:103] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-23 16:21:06,475 - train.py[line:105] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-23 18:10:04,955 - train.py[line:106] - INFO: Exp: test_training_flow Done.[0m
[38;21m2024-10-23 18:25:32,376 - train.py[line:84] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-single_betch_check_id-11', '--optimizer.lr=0.002', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.out_channels=2', '--model.kernel_list=[72, 72, 72, 72, 72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.mode_list=[(100, 151), (100, 151), (100, 151), (100, 151), (100, 151), (100, 151), (100, 151), (100, 151)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-11_dcrp-single_betch_check', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
Process ForkPoolWorker-2:
Process ForkPoolWorker-6:
Process ForkPoolWorker-4:
Process ForkPoolWorker-5:
Process ForkPoolWorker-3:
Process ForkPoolWorker-8:
Process ForkPoolWorker-7:
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/neurolight/train.py", line 106, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 320, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-10-23 18:37:53,949 - train.py[line:84] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=5e-06', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-single_betch_check_id-11', '--optimizer.lr=0.001', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.out_channels=2', '--model.kernel_list=[72, 72, 72, 72, 72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.mode_list=[(100, 151), (100, 151), (100, 151), (100, 151), (100, 151), (100, 151), (100, 151), (100, 151)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-11_dcrp-single_betch_check', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
Process ForkPoolWorker-8:
Process ForkPoolWorker-7:
Process ForkPoolWorker-2:
Process ForkPoolWorker-6:
Process ForkPoolWorker-5:
Process ForkPoolWorker-3:
Process ForkPoolWorker-4:
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/neurolight/train.py", line 106, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 320, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-10-23 19:04:46,457 - train.py[line:84] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/neurolight/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=5.000000000000001e-07', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=neurolight_train_des-single_betch_check_id-11', '--optimizer.lr=0.0001', '--model.name=NeurOLight2d', '--model.in_channels=3', '--model.out_channels=2', '--model.kernel_list=[72, 72, 72, 72, 72, 72, 72, 72]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.mode_list=[(100, 151), (100, 151), (100, 151), (100, 151), (100, 151), (100, 151), (100, 151), (100, 151)]', '--model.dim=72', '--checkpoint.model_comment=model-NeurOLight2d_id-11_dcrp-single_betch_check', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/neurolight/train'][0m
Process ForkPoolWorker-4:
Process ForkPoolWorker-3:
Process ForkPoolWorker-5:
Process ForkPoolWorker-2:
Process ForkPoolWorker-7:
Process ForkPoolWorker-6:
Process ForkPoolWorker-8:
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
KeyboardInterrupt
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/neurolight/train.py", line 106, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 320, in wait
    waiter.acquire()
KeyboardInterrupt
2024/10/23 22:28:08 INFO mlflow.tracking.fluent: Experiment with name 'fno2d' does not exist. Creating a new experiment.
[38;21m2024-10-23 22:28:08,488 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-fno_single_betch_check_id-0', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=100', '--model.mode2=150', '--model.hidden_list=[256]', '--checkpoint.model_comment=model-FNO3d_id-0_dcrp-fno_single_betch_check', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
[38;21m2024-10-23 22:28:15,708 - train.py[line:95] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-23 22:31:36,683 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-fno_single_betch_check_id-0', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=100', '--model.mode2=150', '--model.hidden_list=[256]', '--checkpoint.model_comment=model-FNO3d_id-0_dcrp-fno_single_betch_check', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
[38;21m2024-10-23 22:31:44,006 - train.py[line:95] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-23 22:32:14,558 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-fno_single_betch_check_id-0', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=100', '--model.mode2=150', '--model.hidden_list=[256]', '--checkpoint.model_comment=model-FNO3d_id-0_dcrp-fno_single_betch_check', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
[38;21m2024-10-23 22:32:38,585 - train.py[line:95] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-23 22:34:53,124 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-fno_single_betch_check_id-0', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=100', '--model.mode2=150', '--model.hidden_list=[256]', '--checkpoint.model_comment=model-FNO3d_id-0_dcrp-fno_single_betch_check', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
[38;21m2024-10-23 22:36:06,746 - train.py[line:95] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-23 22:37:02,928 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-fno_single_betch_check_id-0', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=100', '--model.mode2=150', '--model.hidden_list=[96]', '--checkpoint.model_comment=model-FNO3d_id-0_dcrp-fno_single_betch_check', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
[38;21m2024-10-23 22:37:59,082 - train.py[line:95] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-23 22:41:26,776 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-fno_single_betch_check_id-0', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=100', '--model.mode2=150', '--model.hidden_list=[96]', '--checkpoint.model_comment=model-FNO3d_id-0_dcrp-fno_single_betch_check', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
[38;21m2024-10-23 22:42:24,457 - train.py[line:95] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-23 22:45:22,793 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-fno_single_betch_check_id-0', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=100', '--model.mode2=150', '--model.hidden_list=[96]', '--checkpoint.model_comment=model-FNO3d_id-0_dcrp-fno_single_betch_check', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
Process ForkPoolWorker-2:
Process ForkPoolWorker-6:
Process ForkPoolWorker-7:
Process ForkPoolWorker-8:
Process ForkPoolWorker-3:
Process ForkPoolWorker-5:
Process ForkPoolWorker-1:
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/fno/train.py", line 94, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 320, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-10-23 23:02:47,769 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-fno_single_betch_check_id-0', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=100', '--model.mode2=150', '--model.hidden_list=[96]', '--checkpoint.model_comment=model-FNO3d_id-0_dcrp-fno_single_betch_check', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
Process ForkPoolWorker-4:
Process ForkPoolWorker-7:
Process ForkPoolWorker-5:
Process ForkPoolWorker-3:
Process ForkPoolWorker-6:
Process ForkPoolWorker-8:
Process ForkPoolWorker-2:
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
Traceback (most recent call last):
Traceback (most recent call last):
KeyboardInterrupt
KeyboardInterrupt
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 365, in get
    res = self._reader.recv_bytes()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/fno/train.py", line 94, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 320, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-10-23 23:05:47,414 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-fno_single_betch_check_id-0', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=100', '--model.mode2=150', '--model.hidden_list=[96]', '--checkpoint.model_comment=model-FNO3d_id-0_dcrp-fno_single_betch_check', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
Process ForkPoolWorker-2:
Process ForkPoolWorker-5:
Process ForkPoolWorker-4:
Process ForkPoolWorker-3:
Process ForkPoolWorker-6:
Process ForkPoolWorker-7:
Process ForkPoolWorker-8:
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/fno/train.py", line 94, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 320, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-10-23 23:10:38,880 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-fno_single_betch_check_id-0', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=100', '--model.mode2=150', '--model.hidden_list=[96]', '--checkpoint.model_comment=model-FNO3d_id-0_dcrp-fno_single_betch_check', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
Process ForkPoolWorker-6:
Process ForkPoolWorker-8:
Process ForkPoolWorker-7:
Process ForkPoolWorker-2:
Process ForkPoolWorker-3:
Process ForkPoolWorker-5:
Process ForkPoolWorker-4:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/fno/train.py", line 94, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 320, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-10-23 23:25:55,825 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-fno_only_fwd_Ez_id-0', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=100', '--model.mode2=150', '--model.hidden_list=[96]', '--checkpoint.model_comment=model-FNO3d_id-0_dcrp-fno_only_fwd_Ez', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
[38;21m2024-10-24 01:31:16,611 - train.py[line:95] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-24 11:27:05,480 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-fno_only_fwd_Ez_id-1', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=100', '--model.mode2=150', '--model.hidden_list=[96]', '--checkpoint.model_comment=model-FNO3d_id-1_dcrp-fno_only_fwd_Ez', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
Process ForkPoolWorker-8:
Process ForkPoolWorker-5:
Process ForkPoolWorker-7:
Process ForkPoolWorker-3:
Process ForkPoolWorker-6:
Process ForkPoolWorker-2:
Process ForkPoolWorker-4:
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/fno/train.py", line 94, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python310venv/lib/python3.10/threading.py", line 320, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-10-24 11:29:55,912 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-fno_only_fwd_Ez_id-1', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=100', '--model.mode2=150', '--model.hidden_list=[96]', '--checkpoint.model_comment=model-FNO3d_id-1_dcrp-fno_only_fwd_Ez', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
[38;21m2024-10-24 11:30:03,153 - train.py[line:95] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-24 23:39:24,507 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-downsampling_using_conv_id-1', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=75', '--model.mode2=113', '--model.hidden_list=[96]', '--checkpoint.model_comment=model-FNO3d_id-1_dcrp-downsampling_using_conv', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
Process ForkPoolWorker-6:
Process ForkPoolWorker-4:
Process ForkPoolWorker-7:
Process ForkPoolWorker-8:
Process ForkPoolWorker-5:
Process ForkPoolWorker-2:
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/fno/train.py", line 94, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 629, in wait
    signaled = self._cond.wait(timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 327, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-10-24 23:41:12,141 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-downsampling_using_conv_id-1', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=75', '--model.mode2=113', '--model.hidden_list=[96]', '--checkpoint.model_comment=model-FNO3d_id-1_dcrp-downsampling_using_conv', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
Process ForkPoolWorker-5:
Process ForkPoolWorker-7:
Process ForkPoolWorker-8:
Process ForkPoolWorker-4:
Process ForkPoolWorker-3:
Process ForkPoolWorker-6:
Process ForkPoolWorker-2:
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/fno/train.py", line 94, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 629, in wait
    signaled = self._cond.wait(timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 327, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-10-24 23:50:04,463 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-downsampling_using_conv_id-1', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=75', '--model.mode2=113', '--model.hidden_list=[96]', '--checkpoint.model_comment=model-FNO3d_id-1_dcrp-downsampling_using_conv', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
[38;21m2024-10-24 23:53:13,187 - train.py[line:95] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-25 00:21:42,325 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-downsampling_using_conv_id-1', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=75', '--model.mode2=113', '--model.hidden_list=[96]', '--checkpoint.model_comment=model-FNO3d_id-1_dcrp-downsampling_using_conv', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
[38;21m2024-10-25 00:24:51,822 - train.py[line:95] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-25 00:28:58,657 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-downsampling_using_conv_id-1', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=75', '--model.mode2=113', '--model.hidden_list=[96]', '--checkpoint.model_comment=model-FNO3d_id-1_dcrp-downsampling_using_conv', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
[38;21m2024-10-25 02:48:40,241 - train.py[line:95] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-25 09:23:39,253 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-downsampling_using_conv_Tucker_id-2', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=75', '--model.mode2=113', '--model.hidden_list=[96]', '--checkpoint.model_comment=model-FNO3d_id-2_dcrp-downsampling_using_conv_Tucker', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
[38;21m2024-10-25 09:41:33,663 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=1', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-downsampling_using_conv_Tucker_lessproj_cha_id-3', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=75', '--model.mode2=113', '--model.hidden_list=[96]', '--checkpoint.model_comment=model-FNO3d_id-3_dcrp-downsampling_using_conv_Tucker_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
[38;21m2024-10-25 11:43:46,279 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=2', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-downsampling_using_conv_Tucker_lessproj_cha_id-4', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=150', '--model.mode2=225', '--model.hidden_list=[96]', '--checkpoint.model_comment=model-FNO3d_id-4_dcrp-downsampling_using_conv_Tucker_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
[38;21m2024-10-25 12:01:27,457 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=3', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-downsampling_using_conv_lessproj_cha_id-5', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=300', '--model.mode2=450', '--model.hidden_list=[96]', '--checkpoint.model_comment=model-FNO3d_id-5_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
[38;21m2024-10-25 12:02:43,896 - train.py[line:95] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-25 12:07:48,183 - train.py[line:81] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/fno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=3', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=fno_train_des-downsampling_using_conv_lessproj_cha_id-5', '--optimizer.lr=0.002', '--model.name=FNO3d', '--model.in_channels=3', '--model.out_channels=2', '--model.mode1=150', '--model.mode2=225', '--model.hidden_list=[96]', '--checkpoint.model_comment=model-FNO3d_id-5_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/fno/train'][0m
[38;21m2024-10-25 12:36:05,398 - train.py[line:95] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-25 12:55:29,755 - train.py[line:95] - INFO: Exp: fno2d Done.[0m
multiprocessing.pool.RemoteTraceback: 
"""
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
                    ^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 48, in mapstar
    return list(map(*args))
           ^^^^^^^^^^^^^^^^
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 27, in task_launcher
    mixup, device_type, alg, n_layers, id, description, gpu_id, epochs, lr, criterion, criterion_weight, maxwell_loss, checkpt, bs = args
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: not enough values to unpack (expected 14, got 13)
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 108, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 774, in get
    raise self._value
ValueError: not enough values to unpack (expected 14, got 13)
[38;21m2024-10-25 15:13:01,936 - train.py[line:95] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.002', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[96]', '--model.dim=96', '--model.kernel_list=[96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=True', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
[38;21m2024-10-25 15:13:08,772 - train.py[line:109] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-25 15:13:36,855 - train.py[line:95] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.002', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[96]', '--model.dim=96', '--model.kernel_list=[96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=True', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
[38;21m2024-10-25 15:13:44,231 - train.py[line:109] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-25 15:17:34,246 - train.py[line:95] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.002', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[96]', '--model.dim=96', '--model.kernel_list=[96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=True', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
[38;21m2024-10-25 15:18:08,528 - train.py[line:109] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-25 15:25:04,689 - train.py[line:95] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.002', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[96]', '--model.dim=96', '--model.kernel_list=[96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225), (150, 225)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=True', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
[38;21m2024-10-25 15:25:37,761 - train.py[line:109] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-25 15:26:11,811 - train.py[line:95] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.002', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[96]', '--model.dim=96', '--model.kernel_list=[96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(150, 113), (150, 113), (150, 113), (150, 113), (150, 113), (150, 113), (150, 113), (150, 113), (150, 113), (150, 113), (150, 113), (150, 113)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=True', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
[38;21m2024-10-25 15:26:44,602 - train.py[line:109] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-25 15:26:58,721 - train.py[line:95] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.002', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[96]', '--model.dim=96', '--model.kernel_list=[96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(76, 113), (76, 113), (76, 113), (76, 113), (76, 113), (76, 113), (76, 113), (76, 113), (76, 113), (76, 113), (76, 113), (76, 113)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=True', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
Process ForkPoolWorker-7:
Process ForkPoolWorker-6:
Process ForkPoolWorker-8:
Process ForkPoolWorker-2:
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 108, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 629, in wait
    signaled = self._cond.wait(timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 327, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-10-25 15:34:13,990 - train.py[line:95] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.002', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[96]', '--model.dim=96', '--model.kernel_list=[96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(76, 113), (76, 113), (76, 113), (76, 113), (76, 113), (76, 113), (76, 113), (76, 113), (76, 113), (76, 113), (76, 113), (76, 113)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=True', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
Process ForkPoolWorker-8:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process ForkPoolWorker-7:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process ForkPoolWorker-2:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process ForkPoolWorker-3:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 365, in get
    res = self._reader.recv_bytes()
          ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process ForkPoolWorker-6:
Process ForkPoolWorker-4:
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process ForkPoolWorker-5:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process ForkPoolWorker-1:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
                    ^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 48, in mapstar
    return list(map(*args))
           ^^^^^^^^^^^^^^^^
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 96, in task_launcher
    subprocess.call(pres + exp, stderr=wfid, stdout=wfid)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/subprocess.py", line 391, in call
    return p.wait(timeout=timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/subprocess.py", line 1264, in wait
    return self._wait(timeout=timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/subprocess.py", line 2053, in _wait
    (pid, sts) = self._try_wait(0)
                 ^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/subprocess.py", line 2011, in _try_wait
    (pid, sts) = os.waitpid(self.pid, wait_flags)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 108, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 629, in wait
    signaled = self._cond.wait(timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 327, in wait
    waiter.acquire()
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 107, in <module>
    with Pool(8) as p:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 739, in __exit__
    self.terminate()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 657, in terminate
    self._terminate()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/util.py", line 227, in __call__
    res = self._callback(*self._args, **self._kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 695, in _terminate_pool
    cls._help_stuff_finish(inqueue, task_handler, len(pool))
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 675, in _help_stuff_finish
    inqueue._rlock.acquire()
KeyboardInterrupt
[38;21m2024-10-25 15:40:09,183 - train.py[line:96] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.002', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[96]', '--model.dim=96', '--model.kernel_list=[96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(50, 75), (50, 75), (50, 75), (50, 75), (50, 75), (50, 75), (50, 75), (50, 75), (50, 75), (50, 75), (50, 75), (50, 75)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=True', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
Process ForkPoolWorker-6:
Process ForkPoolWorker-7:
Process ForkPoolWorker-5:
Process ForkPoolWorker-4:
Process ForkPoolWorker-2:
Process ForkPoolWorker-8:
Process ForkPoolWorker-3:
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
KeyboardInterrupt
KeyboardInterrupt
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 365, in get
    res = self._reader.recv_bytes()
          ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process ForkPoolWorker-1:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
                    ^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 48, in mapstar
    return list(map(*args))
           ^^^^^^^^^^^^^^^^
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 97, in task_launcher
    subprocess.call(pres + exp, stderr=wfid, stdout=wfid)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/subprocess.py", line 391, in call
    return p.wait(timeout=timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/subprocess.py", line 1264, in wait
    return self._wait(timeout=timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/subprocess.py", line 2053, in _wait
    (pid, sts) = self._try_wait(0)
                 ^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/subprocess.py", line 2011, in _try_wait
    (pid, sts) = os.waitpid(self.pid, wait_flags)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 109, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 629, in wait
    signaled = self._cond.wait(timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 327, in wait
    waiter.acquire()
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 108, in <module>
    with Pool(8) as p:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 739, in __exit__
    self.terminate()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 657, in terminate
    self._terminate()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/util.py", line 227, in __call__
    res = self._callback(*self._args, **self._kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 695, in _terminate_pool
    cls._help_stuff_finish(inqueue, task_handler, len(pool))
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 675, in _help_stuff_finish
    inqueue._rlock.acquire()
KeyboardInterrupt
[38;21m2024-10-25 15:43:33,642 - train.py[line:96] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=1.0000000000000002e-06', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.0002', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[96]', '--model.dim=96', '--model.kernel_list=[96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(50, 75), (50, 75), (50, 75), (50, 75), (50, 75), (50, 75), (50, 75), (50, 75), (50, 75), (50, 75), (50, 75), (50, 75)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=True', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
Process ForkPoolWorker-3:
Process ForkPoolWorker-7:
Process ForkPoolWorker-6:
Process ForkPoolWorker-8:
Process ForkPoolWorker-5:
Process ForkPoolWorker-4:
Process ForkPoolWorker-2:
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 109, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 629, in wait
    signaled = self._cond.wait(timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 327, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-10-25 15:50:30,978 - train.py[line:96] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=2.5e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.005', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[96]', '--model.dim=96', '--model.kernel_list=[96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(50, 75), (50, 75), (50, 75), (50, 75), (50, 75), (50, 75), (50, 75), (50, 75), (50, 75), (50, 75), (50, 75), (50, 75)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=True', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
Process ForkPoolWorker-8:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process ForkPoolWorker-7:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process ForkPoolWorker-6:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process ForkPoolWorker-5:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process ForkPoolWorker-4:
Traceback (most recent call last):
Process ForkPoolWorker-2:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 365, in get
    res = self._reader.recv_bytes()
          ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process ForkPoolWorker-3:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process ForkPoolWorker-1:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
                    ^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 48, in mapstar
    return list(map(*args))
           ^^^^^^^^^^^^^^^^
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 97, in task_launcher
    subprocess.call(pres + exp, stderr=wfid, stdout=wfid)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/subprocess.py", line 391, in call
    return p.wait(timeout=timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/subprocess.py", line 1264, in wait
    return self._wait(timeout=timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/subprocess.py", line 2053, in _wait
    (pid, sts) = self._try_wait(0)
                 ^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/subprocess.py", line 2011, in _try_wait
    (pid, sts) = os.waitpid(self.pid, wait_flags)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 109, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 629, in wait
    signaled = self._cond.wait(timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 327, in wait
    waiter.acquire()
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 108, in <module>
    with Pool(8) as p:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 739, in __exit__
    self.terminate()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 657, in terminate
    self._terminate()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/util.py", line 227, in __call__
    res = self._callback(*self._args, **self._kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 695, in _terminate_pool
    cls._help_stuff_finish(inqueue, task_handler, len(pool))
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 675, in _help_stuff_finish
    inqueue._rlock.acquire()
KeyboardInterrupt
[38;21m2024-10-25 15:53:57,450 - train.py[line:96] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=2.5e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.005', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[96]', '--model.dim=96', '--model.kernel_list=[96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(301, 451), (301, 451), (301, 451), (301, 451), (301, 451), (301, 451), (301, 451), (301, 451), (301, 451), (301, 451), (301, 451), (301, 451)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=False', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
[38;21m2024-10-25 15:54:58,778 - train.py[line:110] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-25 15:57:30,725 - train.py[line:96] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=2.5e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.005', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[64]', '--model.dim=64', '--model.kernel_list=[64, 64, 64, 64, 64, 64, 64, 64]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(301, 451), (301, 451), (301, 451), (301, 451), (301, 451), (301, 451), (301, 451), (301, 451)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=False', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
[38;21m2024-10-25 15:58:35,150 - train.py[line:110] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-25 16:00:49,203 - train.py[line:96] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=2.5e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.005', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[64]', '--model.dim=64', '--model.kernel_list=[64, 64, 64, 64]', '--model.kernel_size_list=[1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0]', '--model.mode_list=[(301, 451), (301, 451), (301, 451), (301, 451)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=False', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
Process ForkPoolWorker-7:
Process ForkPoolWorker-4:
Process ForkPoolWorker-8:
Process ForkPoolWorker-2:
Process ForkPoolWorker-5:
Process ForkPoolWorker-6:
Process ForkPoolWorker-3:
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
KeyboardInterrupt
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 365, in get
    res = self._reader.recv_bytes()
          ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process ForkPoolWorker-1:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
                    ^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 48, in mapstar
    return list(map(*args))
           ^^^^^^^^^^^^^^^^
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 97, in task_launcher
    subprocess.call(pres + exp, stderr=wfid, stdout=wfid)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/subprocess.py", line 391, in call
    return p.wait(timeout=timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/subprocess.py", line 1264, in wait
    return self._wait(timeout=timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/subprocess.py", line 2053, in _wait
    (pid, sts) = self._try_wait(0)
                 ^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/subprocess.py", line 2011, in _try_wait
    (pid, sts) = os.waitpid(self.pid, wait_flags)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 109, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 629, in wait
    signaled = self._cond.wait(timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 327, in wait
    waiter.acquire()
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 108, in <module>
    with Pool(8) as p:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 739, in __exit__
    self.terminate()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 657, in terminate
    self._terminate()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/util.py", line 227, in __call__
    res = self._callback(*self._args, **self._kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 695, in _terminate_pool
    cls._help_stuff_finish(inqueue, task_handler, len(pool))
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 675, in _help_stuff_finish
    inqueue._rlock.acquire()
KeyboardInterrupt
[38;21m2024-10-25 16:09:37,037 - train.py[line:96] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=2.5e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.005', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[64]', '--model.dim=64', '--model.kernel_list=[64, 64, 64, 64, 64, 64, 64, 64]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(301, 451), (301, 451), (150, 225), (150, 225), (75, 113), (75, 113), (38, 56), (38, 56)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=False', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
[38;21m2024-10-25 16:10:38,796 - train.py[line:110] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-25 16:12:08,647 - train.py[line:96] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=2.5e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.005', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[32]', '--model.dim=32', '--model.kernel_list=[32, 32, 32, 32, 32, 32, 32, 32]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(301, 451), (301, 451), (150, 225), (150, 225), (75, 113), (75, 113), (38, 56), (38, 56)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=False', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
Process ForkPoolWorker-2:
Process ForkPoolWorker-8:
Process ForkPoolWorker-3:
Process ForkPoolWorker-5:
Process ForkPoolWorker-6:
Process ForkPoolWorker-4:
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 365, in get
    res = self._reader.recv_bytes()
          ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process ForkPoolWorker-7:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process ForkPoolWorker-1:
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
                    ^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 48, in mapstar
    return list(map(*args))
           ^^^^^^^^^^^^^^^^
  File "/home/pingchua/projects/MAPS/scripts/nn/fno/train.py", line 82, in task_launcher
    subprocess.call(pres + exp, stderr=wfid, stdout=wfid)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/subprocess.py", line 391, in call
    return p.wait(timeout=timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/subprocess.py", line 1264, in wait
    return self._wait(timeout=timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/subprocess.py", line 2053, in _wait
    (pid, sts) = self._try_wait(0)
                 ^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/subprocess.py", line 2011, in _try_wait
    (pid, sts) = os.waitpid(self.pid, wait_flags)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/fno/train.py", line 94, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 629, in wait
    signaled = self._cond.wait(timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 327, in wait
    waiter.acquire()
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/fno/train.py", line 93, in <module>
    with Pool(8) as p:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 739, in __exit__
    self.terminate()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 657, in terminate
    self._terminate()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/util.py", line 227, in __call__
    res = self._callback(*self._args, **self._kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 695, in _terminate_pool
    cls._help_stuff_finish(inqueue, task_handler, len(pool))
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 675, in _help_stuff_finish
    inqueue._rlock.acquire()
KeyboardInterrupt
Process ForkPoolWorker-3:
Process ForkPoolWorker-4:
Process ForkPoolWorker-5:
Process ForkPoolWorker-2:
Process ForkPoolWorker-6:
Process ForkPoolWorker-7:
Process ForkPoolWorker-8:
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 109, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 629, in wait
    signaled = self._cond.wait(timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 327, in wait
    waiter.acquire()
KeyboardInterrupt
Process ForkPoolWorker-6:
Process ForkPoolWorker-7:
Process ForkPoolWorker-8:
Process ForkPoolWorker-3:
Process ForkPoolWorker-4:
Process ForkPoolWorker-5:
Process ForkPoolWorker-1:
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
KeyboardInterrupt
KeyboardInterrupt
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 114, in worker
    task = get()
           ^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/queues.py", line 364, in get
    with self._rlock:
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/fno/train.py", line 94, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 629, in wait
    signaled = self._cond.wait(timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 327, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-10-25 16:21:19,496 - train.py[line:96] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=2.5e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.005', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[32]', '--model.dim=32', '--model.kernel_list=[32, 32, 32, 32, 32, 32, 32, 32]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(75, 113), (75, 113), (75, 113), (75, 113), (75, 113), (75, 113), (38, 56), (38, 56)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=False', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
Process ForkPoolWorker-7:
Process ForkPoolWorker-6:
Process ForkPoolWorker-4:
Process ForkPoolWorker-3:
Process ForkPoolWorker-2:
Process ForkPoolWorker-5:
Process ForkPoolWorker-8:
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 109, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 629, in wait
    signaled = self._cond.wait(timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 327, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-10-25 16:28:25,792 - train.py[line:96] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=2.5e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.005', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[96]', '--model.dim=96', '--model.kernel_list=[96, 96, 96, 96, 96, 96, 96, 96]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=False', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
[38;21m2024-10-25 16:29:18,329 - train.py[line:110] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-25 16:29:23,379 - train.py[line:96] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=2.5e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.005', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[64]', '--model.dim=64', '--model.kernel_list=[64, 64, 64, 64, 64, 64, 64, 64]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=False', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
[38;21m2024-10-25 16:30:16,122 - train.py[line:110] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-25 16:33:13,667 - train.py[line:96] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=2.5e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.005', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[32]', '--model.dim=32', '--model.kernel_list=[32, 32, 32, 32, 32, 32, 32, 32]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=False', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
Process ForkPoolWorker-7:
Process ForkPoolWorker-6:
Process ForkPoolWorker-8:
Process ForkPoolWorker-5:
Process ForkPoolWorker-4:
Process ForkPoolWorker-3:
Process ForkPoolWorker-2:
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 109, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 629, in wait
    signaled = self._cond.wait(timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 327, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-10-25 16:56:09,856 - train.py[line:96] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=2.5e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.005', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[32]', '--model.dim=32', '--model.kernel_list=[32, 32, 32, 32, 32, 32, 32, 32]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=False', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
[38;21m2024-10-25 16:57:08,144 - train.py[line:110] - INFO: Exp: fno2d Done.[0m
[38;21m2024-10-25 16:57:59,923 - train.py[line:96] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=2.5e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.005', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[32]', '--model.dim=32', '--model.kernel_list=[32, 32, 32, 32, 32, 32, 32, 32]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=False', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
Process ForkPoolWorker-4:
Process ForkPoolWorker-5:
Process ForkPoolWorker-6:
Process ForkPoolWorker-3:
Process ForkPoolWorker-7:
Process ForkPoolWorker-8:
Process ForkPoolWorker-2:
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 109, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 629, in wait
    signaled = self._cond.wait(timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 327, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-10-25 17:01:36,862 - train.py[line:96] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=2.5e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.005', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[32]', '--model.dim=32', '--model.kernel_list=[32, 32, 32, 32, 32, 32, 32, 32]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=False', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
Process ForkPoolWorker-5:
Process ForkPoolWorker-7:
Process ForkPoolWorker-8:
Process ForkPoolWorker-6:
Process ForkPoolWorker-2:
Process ForkPoolWorker-4:
Process ForkPoolWorker-3:
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 109, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 629, in wait
    signaled = self._cond.wait(timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 327, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-10-25 17:06:51,365 - train.py[line:96] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=2.5e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.005', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[32]', '--model.dim=32', '--model.kernel_list=[32, 32, 32, 32, 32, 32, 32, 32]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=False', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
Process ForkPoolWorker-7:
Process ForkPoolWorker-8:
Process ForkPoolWorker-5:
Process ForkPoolWorker-6:
Process ForkPoolWorker-4:
Process ForkPoolWorker-3:
Process ForkPoolWorker-2:
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 109, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 629, in wait
    signaled = self._cond.wait(timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 327, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-10-25 17:11:34,940 - train.py[line:96] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=2.5e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.005', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[32]', '--model.dim=32', '--model.kernel_list=[32, 32, 32, 32, 32, 32, 32, 32]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=False', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
Process ForkPoolWorker-6:
Process ForkPoolWorker-7:
Process ForkPoolWorker-8:
Process ForkPoolWorker-3:
Process ForkPoolWorker-5:
Process ForkPoolWorker-4:
Process ForkPoolWorker-2:
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/pingchua/projects/MAPS/scripts/nn/ffno/train.py", line 109, in <module>
    p.map(task_launcher, tasks)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 367, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 768, in get
    self.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/multiprocessing/pool.py", line 765, in wait
    self._event.wait(timeout)
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 629, in wait
    signaled = self._cond.wait(timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiaqigu/pkgs/miniforge3/envs/python311venv/lib/python3.11/threading.py", line 327, in wait
    waiter.acquire()
KeyboardInterrupt
[38;21m2024-10-27 00:23:26,231 - train.py[line:96] - INFO: running command ['python3', 'train_NN.py', 'configs/fdfd/ffno/train/train.yml', '--dataset.device_type=metacoupler', '--dataset.processed_dir=metacoupler', '--dataset.num_workers=4', '--dataset.augment.prob=0.0', '--run.n_epochs=50', '--run.batch_size=2', '--run.gpu_id=0', '--run.log_interval=100', '--run.random_state=59', '--run.fp16=False', '--criterion.name=nmse', '--criterion.weight=1', '-aux_criterion.maxwell_residual_loss.weight=0', '--test_criterion.name=nmse', '--test_criterion.weighted_frames=0', '--test_criterion.weight=1', '--scheduler.lr_min=2.5e-05', '--plot.train=True', '--plot.valid=True', '--plot.test=True', '--plot.interval=1', '--plot.dir_name=ffno_train_des-downsampling_using_conv_lessproj_cha_id-0', '--optimizer.lr=0.005', '--model.name=FFNO2d', '--model.in_channels=3', '--model.out_channels=2', '--model.hidden_list=[32]', '--model.dim=32', '--model.kernel_list=[32, 32, 32, 32, 32, 32, 32, 32]', '--model.kernel_size_list=[1, 1, 1, 1, 1, 1, 1, 1]', '--model.padding_list=[0, 0, 0, 0, 0, 0, 0, 0]', '--model.mode_list=[(20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20), (20, 20)]', '--model.act_func=GELU', '--model.dropout_rate=0.0', '--model.drop_path_rate=0.0', '--model.aux_head=False', '--model.aux_head_idx=1', '--model.pos_encoding=none', '--model.with_cp=False', '--model.conv_stem=False', '--model.aug_path=True', '--model.ffn=True', '--model.ffn_dwconv=True', '--checkpoint.model_comment=model-FFNO2d_id-0_dcrp-downsampling_using_conv_lessproj_cha', '--checkpoint.resume=False', '--checkpoint.restore_checkpoint=none', '--checkpoint.checkpoint_dir=fdfd/ffno/train'][0m
[38;21m2024-10-27 00:23:30,818 - train.py[line:110] - INFO: Exp: fno2d Done.[0m
